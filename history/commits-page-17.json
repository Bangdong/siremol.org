{"Page":17,"TotalPages":28,"commits":[{"author":"chryswoods","date":"2010-01-22T16:36:15.390099Z","commit":"1175","message":"I've fixed a few small bugs that stopped the workpacket scheduler from maximising usage\nof a cluster when more than one workpack is run at the same time\n\n"},{"author":"chryswoods","date":"2010-01-21T12:14:37.872506Z","commit":"1174","message":"I've added code to the Molpro interface that catches cases where Molpro hangs. In these cases\nMolpro is killed and restarted (up to a maximum number of retries). This is to catch a molpro\nhang that I am experiencing on AIX.\n\n"},{"author":"chryswoods","date":"2010-01-20T19:17:14.515869Z","commit":"1173","message":"I've added Mutex and WaitCondition and will move Siren over to using these classes.\nThis will help ensure that Siren-based code can be interupted by signalling the \nend of for-ages.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-20T15:16:05.380747Z","commit":"1172","message":"I've added a user@hostname header to the output of Sire so that I can ensure\nthat the AIX job script is creating one Sire process per LPAR (node)\n\n"},{"author":"chryswoods","date":"2010-01-20T12:01:47.505933Z","commit":"1171","message":"I've removed debugging messages from SireStream and have added timing messages to Molpro.\n\nThis code works without problem (so far) on AIX, although only in 64bit - in 32bit zlib\nstill hangs for the larger jobs.\n\n"},{"author":"chryswoods","date":"2010-01-20T08:51:49.088767Z","commit":"1170","message":"I've added the functions to register/deregister QThread-based threads with for-ages\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-19T20:49:26.390464Z","commit":"1169","message":"I've added code that allows me to implement \"for-ages\" - see my blog post\n\u003chttp://siremol.org/node/50\u003e\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-12T21:02:28.366039Z","commit":"1168","message":"I've got backend to compile now and am working out how to update Cluster and ReservationManager.\nI think that ReservationManager should become an accessible class, as this should be the\nclass that manages Backend objects in a process. Cluster is then a class that can run\non any process that scans all processes, queries ReservationManager for available resources,\ncompiles them, and then gets the frontends to those resources (if requested).\n\nSo ReservationManager should be renamed something like ResourceManager, and it manages\nBackends, with one ResourceManager per process, while Cluster manages frontends,\nwith one Cluster per active process\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-12T16:44:13.663166Z","commit":"1167","message":"Fixing the streaming of QMComponent worked - this alerts me to the possibility of some very\nsubtle bugs caused by the compiler skipping non-declared QDataStream prototypes. Fortunately\nI don't do this with the new version of Sire, as Siren uses virtual functions (phew!)\n\nI've added extra command line options to molpro so that it writes to stdout and doesn't\nwrite any xml\n\n"},{"author":"chryswoods","date":"2010-01-12T15:26:15.882017Z","commit":"1166","message":"I've fixed a small bug in that the prototype for serialising a QMComponent was not\nvisible, hence why HPCx may have skipped directly to FFComponent\n\n"},{"author":"chryswoods","date":"2010-01-12T15:14:09.795961Z","commit":"1165","message":"Ok - I've discovered that qUncompress for the large file fails only after MPI has been\ninitialised on HPCx. Curious.\n\nI've also seen that I still get the error with corruption of FFComponent, even on the \nnon-MPI version of Sire on HPCx, so I have added a bit of code to find out which\nFFComponent hasn't been written\n\n"},{"author":"chryswoods","date":"2010-01-12T10:50:51.057247Z","commit":"1164","message":"I've edited streamdata so that I can further debug the hang when using qUncompress. When I use it\nin a simple example it works fine, so I think that something is making it fail in Sire.\n\n"},{"author":"chryswoods","date":"2010-01-11T14:02:26.044316Z","commit":"1163","message":"I tracked down the hang to qUncompress - for some reason the call to qUncompress was hanging\non AIX when the QByteArray was large. I disabled compression and will see how that \naffects things...\n\n"},{"author":"chryswoods","date":"2010-01-11T12:58:36.639444Z","commit":"1162","message":"I've backported a bugfix for managing the memory of a CoordGroup from branches/users/chryswoods\nand have also added some code to debug the streaming of files. The problem on HPCx is definitely\nwhile loading the restart file\n\n"},{"author":"chryswoods","date":"2010-01-11T11:51:02.834708Z","commit":"1161","message":"I've added more code to help debug the deadlock in HPCx - it looks like it is something to do\nwith loading a large restart file...\n\n"},{"author":"chryswoods","date":"2010-01-11T10:27:11.561742Z","commit":"1160","message":"Committing code that will help me debug the deadlock on hpcx\n\n"},{"author":"chryswoods","date":"2010-01-11T08:48:17.157787Z","commit":"1159","message":"I've got Frontend to compile - now working on Backend...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-10T22:20:31.375079Z","commit":"1158","message":"I'm making progress porting SireCluster to Siren. I've cleaned up the classes used for\ncommunication. I now have;\n\nBackend - this provides a compute unit that can process WorkPackets\n\nDormantBackend - this handle holds a Backend that is not yet assigned to a cluster\nActiveBackend - this handle holds a Backend that is assigned to a cluster, and \n                is thus connected to by a Frontend (so it is part of a Nodes cluster)\n\nFrontend - this provides a frontend to a compute unit - it provides the means by \n           which you can communicate with a Backend\n\nDormantFrontend - this handle holds a frontend that is not yet in use, i.e. an\n                  idle node in the cluster\nActiveFrontend - this handle holds a frontend in active use, i.e. a Node which is\n                 being used by the user and is held by a Node object.\n\nThus, Nodes holds a collection of DormantFrontend objects. When Nodes is asked to\nprovide a Node, it activates one of the DormantFrontend objects and passes the\nresulting ActiveFrontend to a Node object, which is returned to the user.\n\nThe user uses the Node object to submit the workpacket and wait on the promise.\nThe active frontend in the Node communicates the workpacket to the ActiveBackend\n(which may be on a different process or computer), and the active backend then\npasses the workpacket to the actual Backend object that runs the job. ActiveBackend,\nDormantBackend, ActiveFrontend, DormantFrontend, Node and Nodes are all \nconcrete, non-virtual classes. All of the flexibility is provided by Frontend\nand Backend, with Frontend providing the different routes by which frontends\ncan connect to backends (e.g. MPIFrontend, SocketFrontend etc.) and backends\nproviding the different compute resources (e.g. LocalBackend, ThreadBackend,\nGPGPUBackend?)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-09T21:51:50.056411Z","commit":"1157","message":"I've started work porting SireCluster over to Siren - in the process I am going to clean\nup the interfaces in SireCluster a little\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-09T17:27:36.273633Z","commit":"1156","message":"I've debugged SireVol and have got its unit tests working (they all pass, such that they are)\n\n"},{"author":"chryswoods","date":"2010-01-09T14:25:14.463517Z","commit":"1155","message":"I've fixed the memory bug in CoordGroup and have also added guards so that the unit test code\ncan be disabled (to reduce executable size if desired). I've also fixed some problems with\nthe registration of class type in Class so that now they are all held in a central\nhash rather than left within the memory of each library.\n\n"},{"author":"chryswoods","date":"2010-01-08T22:33:47.285423Z","commit":"1154","message":"I've finished porting SireVol to Siren, and have got the python wrappers working. sirentest\nhas found that CoordGroup crashes when it is deleted, and I cannot work out why...\n\nIt may be because the sizes of the objects have changed, but none of the asserts\nare triggered... Weird\n\n"},{"author":"chryswoods","date":"2010-01-08T17:15:06.994326Z","commit":"1153","message":"I've added the python wrappers to the repository for the devel/chryswoods branch\n\n"},{"author":"chryswoods","date":"2010-01-08T14:45:28.526025Z","commit":"1152","message":"Actually, I've decided to commit all of the generated python wrappers. The repository has\nmore space now, and, to be honest, these wrappers aren't changing as much as they\nused to. By adding the wrappers I stop the casual user from having to generate them, which\nmakes everyone's lives much easier!\n\n"},{"author":"chryswoods","date":"2010-01-08T14:04:44.111078Z","commit":"1151","message":"I've decided to add the Qt python wrappers directly to the repository as they are a pain\nin the neck to autogenerate!\n\n"},{"author":"chryswoods","date":"2010-01-07T22:17:04.608676Z","commit":"1150","message":"I've added the ability to run individual tests in sirentest, have fixed some bugs and added more\ntests to SireCAS, and have begun porting SireVol to Siren (nearly all done - just the implementation\nin coordgroup.cpp to complete)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-07T13:57:07.078969Z","commit":"1149","message":"I've also merged in python2/branches/devel into python2/branches/users/chryswoods, using the command\n\ncd python2/branches/users/chryswoods\nsvn merge -r 1111:1147 ../../devel/\n\n"},{"author":"chryswoods","date":"2010-01-07T13:53:30.563276Z","commit":"1148","message":"I've forward-ported the changes in branches/devel to branches/users/chryswoods, as these changes\nwere mainly in parts of Sire that have yet to be ported to Siren.\n\nThe svn merge command was\n\ncd branches/users/chryswoods\nsvn merge -r 1111:1147 ../../devel/\n\n"},{"author":"chryswoods","date":"2010-01-05T20:32:38.302142Z","commit":"1147","message":"I've fixed a bug in the mover that meant that angles were set incorrectly, and have also \nadded code to write \"CONECT\" lines to PDB files based on the connectivity property\n\n"},{"author":"chryswoods","date":"2010-01-04T16:23:49.124096Z","commit":"1146","message":"Forgot to remove some debugging statements...\n\n"},{"author":"chryswoods","date":"2010-01-04T16:02:37.737332Z","commit":"1145","message":"I think that I have finished the perturbations now (and constraints) - the code appears to work\nand gives identical energies for ethane methanol as ProtoMS (except for the LJ energy of intermediate\nlambda values as I use a slightly different algorithm for the perturbation - but it is right to \nwithin a couple of d.p.)\n\nNow I can load this on the cluster and test it!\n\n"},{"author":"chryswoods","date":"2010-01-04T12:09:20.277452Z","commit":"1144","message":"I've nearly sorted out the code to implement internal parameter perturbations. The code is \nhighly flexible, allowing complete user control of how the internal energy expression\nis perturbed using the mapping function :-)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2010-01-03T16:30:44.061648Z","commit":"1143","message":"Ok - it wasn't ready to test on the cluster - there were several bugs, and also, after \ndetailed comparison with ProtoMS, I've realised that I haven't added the code to \nperturb the intramolecular parameters. I've now added the code to parse the \nbond/angle/dihedral/ub parameter perturbations, and now need to write the code\nto implement them...\n\n"},{"author":"chryswoods","date":"2010-01-03T14:02:24.378393Z","commit":"1142","message":"I've fixed some bugs that were stopping the ethane to methanol example from working.\nI am now going to try and run this on the cluster to see if the predicted free energy\nis correct.\n\n"},{"author":"chryswoods","date":"2010-01-02T17:51:04.988446Z","commit":"1141","message":"I've worked on getting the ethane to methanol single topology perturbation code working.\n\n"},{"author":"chryswoods","date":"2010-01-02T12:08:26.728272Z","commit":"1140","message":"I've sorted out the ProtoMS reader so that it adds dummy atoms to solutes (so that \nperturbations work for small molecules). I am also setting up a single topology\nexample ethane to methanol free energy calculation (based on the ProtoMS\ntutorial)\n\n"},{"author":"chryswoods","date":"2010-01-01T15:27:54.375671Z","commit":"1139","message":"I've finished implementing the perturbation constraint, and have written a quick\ntest (test/SireSystem/perturbationconstraint.py) which seems to show that it works.\n\n"},{"author":"chryswoods","date":"2009-12-24T16:15:18.206127Z","commit":"1138","message":"I am making progress coding the perturbation constraint - I think that I've sorted out the \ncode that applies the constraint correctly if anything changes (and ignores things\nthat don't change).\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-12-24T13:06:31.861641Z","commit":"1137","message":"I've updated the perturbations so that they can return their children, can be recreated\n(to change the expressions) and they can indicate the properties and symbols they require,\nand whether or not they would change a molecule. This is all necessary so that I can\nnow go on and write the perturbation constraint class.\n\n"},{"author":"chryswoods","date":"2009-12-23T21:55:23.753829Z","commit":"1136","message":"I've fixed the problems with the perturbation (in doing so I've fixed bugs in mover.cpp\nthat prevented it from working, and values.cpp that prevented it from printing\nout the values!) - it all seems to work - the perturbation in test/io/sb2.ff\nworks correctly, moving the atoms and also changing the charge and LJ parameters\ncorrectly - see test/SireMol/perturbation.py\n\n\n"},{"author":"chryswoods","date":"2009-12-23T17:31:26.968217Z","commit":"1135","message":"I've written the code to allow geometry perturbations and have got most of the code working\nthat reads perturbations using ProtoMS. The only problem now is that the perturbations\nI want to use will cause ring errors or involve disconnected bonds...\n\n\n"},{"author":"chryswoods","date":"2009-12-18T14:14:41.909850Z","commit":"1134","message":"I am adding code that will allow me to apply perturbations to properties in molecules,\nand to add constraints that can use those perturbations. I've also modified RigidBodyMC\nand ZMatMove so that molecules can be tied together. This is all so that I can \nimplement single topology style perturbations so that I can calculate relative\nbinding free energies and reaction activation free energies using traditional\ntechniques.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-12-14T10:39:59.662098Z","commit":"1133","message":"Here are the updates that allow the ported CAS code to be wrapped in python\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-12-14T10:39:25.600085Z","commit":"1132","message":"I've finished porting SireCAS, though there are a few segfaults while using it. It needs debugging!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-12-11T22:23:16.064285Z","commit":"1131","message":"I've nearly finished porting SireCAS to Siren - just Sum and Product to go...\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-12-11T16:53:09.617683Z","commit":"1130","message":"I'm making a lot of progress with porting SireCAS to Siren. The fit between the two is really\ngood, and this is making SireCAS much more robust and readable.\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-12-11T13:22:23.790324Z","commit":"1129","message":"I've fixed the reading of dummy atoms in ProtoMS output\n\n"},{"author":"chryswoods","date":"2009-12-08T16:54:49.040131Z","commit":"1128","message":"I've fixed the automatic conversion of ObjRef and ObjPtr to PyObject, so that\nclone_const_reference and automatic conversion of ObjPtr derived types works.\nPython wrappers for SireMaths and SireBase seem to compile and work well.\n\nCode is still quite broken\n\n"},{"author":"chryswoods","date":"2009-12-07T08:56:16.840951Z","commit":"1127","message":"I'm now working on getting the new SireBase and SireMaths python wrappers working...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-12-06T20:05:08.339870Z","commit":"1126","message":"SireBase and SireMaths now both compile and link and the tests (those that have been written)\nrun via sirentest.\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-12-06T16:48:12.445147Z","commit":"1125","message":"I've nearly finished porting SireBase over to Siren. I've just got to \nfinish Properties, CombineProperties and LinkToProperty.\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-12-06T14:13:31.239462Z","commit":"1124","message":"I'm making good progress working through porting SireBase to Siren. I've decided that container\ntypes will not inherit from Siren::Object or Siren::Primitive (as this is not really necessary,\nand I am not inheriting the Qt containers...)\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-12-05T22:14:32.656868Z","commit":"1123","message":"I've finished porting SireMaths to Siren and have made a start porting SireBase...\n\nCode is all broken\n\n"},{"author":"chryswoods","date":"2009-12-04T23:11:05.079823Z","commit":"1122","message":"I'm making progress porting SireMaths over to use Siren...\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-12-02T19:18:37.379290Z","commit":"1121","message":"Sire (and Siren) now compile and work on HPCx, with parallel jobs working without problem.\nThe only difficulty now is that there are QBuffer memory errors which are causing problems\nwriting and reading restart files. When I had these before they were caused by a \nnon-thread-safe malloc which was brought in by the MPI libraries...\n\nI've also merged into branches/users/chryswoods the changes that I've made \nto branches devel via;\n\nsvn merge https://sire.googlecode.com/svn/corelib/branches/devel -r 1110:1120\nsvn merge https://sire.googlecode.com/svn/python2/branches/devel -r 1110:1120\n\nbranches/devel works fine (on mac, linux 32/64 and AIX)\nbranches/users/chryswoods is VERY broken\n\n"},{"author":"chryswoods","date":"2009-12-02T13:44:06.231803Z","commit":"1120","message":"I've fixed compile bugs for Siren on HPCx (which required me renaming the 'copy' function to 'clone'\nand the protected 'clone' function to 'ptr_clone'). I've also added a try/catch block to \nSireCluster::Backend so that uncaught exceptions won't crash the process (and will\nbe correctly returned to the caller)\n\n"},{"author":"chryswoods","date":"2009-12-02T11:41:17.865429Z","commit":"1119","message":"I've moved SireCluster over to not use Barrier or Broadcast at all, as it seems that all\nof the MPI blocking functions consume 100% CPU while they are waiting for a message. This\nis not acceptable for Sire, as this has several threads waiting for messages, and these\nthreads must not take time away from the compute threads. I have thus replaced it all\nwith MPI::Probe followed by MPI::Recv, with sleeps between empty probes. This\nbrings down the CPU usage to 0.1-0.2%, and is quite responsive (although there\nis a linearly scaling cost of setting up a cluster due to lag caused by the\nsleep statements...)\n\n"},{"author":"chryswoods","date":"2009-12-01T13:41:30.496710Z","commit":"1118","message":"I've fixed a deadlock with the new MPI libraries on blucrystalp2 - for some reason it didn't\nlike the MPI::Barriers that I was placing everywhere, so I have removed them all.\n\nI've also fixed compilation of Siren on linux (it was a little broken).\n\nbranches/devel code works.\n\n"},{"author":"chryswoods","date":"2009-12-01T08:51:57.737894Z","commit":"1117","message":"I've ported SireMaths/accumulator.h/.cpp across to Siren. This file contains a hierarchy of\nclasses that really demonstrate how Siren is to be used in Sire, e.g.\n\nclass Accumulator : public Extends\u003cAccumulator,Object\u003e,\n                    public Interfaces\u003cAccumulator,Mutable\u003e\n\n\nclass Average : public Implements\u003cAverage,Accumulator\u003e\n\nclass AverageAndStddev : public Implements\u003cAverageAndStddev,Average\u003e\n\nCode is really broken\n\n"},{"author":"chryswoods","date":"2009-11-29T18:49:57.112642Z","commit":"1116","message":"I'm making good progress porting SireMaths to Siren...\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-11-27T23:42:20.446596Z","commit":"1115","message":"Here are the updates necessary for the ID python wrappers...\n\n"},{"author":"chryswoods","date":"2009-11-27T23:41:31.338357Z","commit":"1114","message":"I've ported SireID (together with the python wrappers - committing next..!)\n\nSire is still really broken\n\n"},{"author":"chryswoods","date":"2009-11-27T22:23:32.621612Z","commit":"1113","message":"...and here are the fixed python wrappers for Siren and Units (and Qt). Note also that\nI have got rid of Helpers/SirePython2 as much of this code is no longer required\n(the Class object in Siren deals with object registration and creation) and\ncommon code has been moved into Siren. I've also removed Stream and Error\nas they are no longer required.\n\n"},{"author":"chryswoods","date":"2009-11-27T22:18:30.751479Z","commit":"1112","message":"I've ported over SireUnits - one down, lots to go...\n\nCode is very broken\n\n"},{"author":"chryswoods","date":"2009-11-27T14:38:55.882451Z","commit":"1111","message":"OK  - this is the start of a very broken set of versions of Sire. I am now starting the \nmigration of the code over to Siren. I assumed I could do this piecemeal, but I can't,\nso this will all break now.\n\nIf you want a non-broken version, please use trunk or branches/devel, which are both\ncopies of the last version of Sire (and branches/devel will continue to be developed while\nI am running production on HPCx)\n\nAlso - MAJOR - I am dumping the previous version of the binary streaming format. The\nSiren streaming format is too different to support what I had before, and given the\nlow number of current users, it is too expensive to try to port it. Thus any binary\nfiles produced by previous versions of Sire now will not work with any versions\nof Sire from now on. This is a pain, but the benefit is that the new streaming\nformat has XML, better versioning, and allows easy extension to different formats\nwithout having to change the objects (you just create a new polymorphic streaming\nobject)\n\nFinally, I am taking the opportunity of removing SireError and SireStream\n(as these are replaced by Siren) and of removing the dependency of GSL.\nI have nothing against GSL, but since I pull BLAS in myself, I want\nto remove the GSL dependency as it compliates the portability of the\nbuild scripts if different BLAS libraries are used for GSL and for SireMaths...\n\nCode is very, very, very broken...!\n \n"},{"author":"chryswoods","date":"2009-11-26T20:59:50.826367Z","commit":"1110","message":"I've copied branches/users/chryswoods into trunk and branches/devel, and *promise* to \nmerge from branches/users/chryswoods more often... ;-)\n\n"},{"author":"chryswoods","date":"2009-11-26T20:54:07.934192Z","commit":"1109","message":"Before porting Sire to Siren, I'd better update 'trunk' and 'devel' so that they have the best,\nlatest version of Sire (also, I really do need to work more in branches/devel and get into\nthe habit of updating trunk...)\n\n"},{"author":"chryswoods","date":"2009-11-26T00:05:09.279963Z","commit":"1108","message":"I've updated the metatype system so that it works fully for Primitive and Handle types.\nNow Number and String work (and .getClass() works for them too!)\n\nThe only test failures from sirentest are Logger, DataStream and XMLStream, who all\ncomplain that I haven't yet written unit tests for them!\n\n"},{"author":"chryswoods","date":"2009-11-24T23:26:27.967493Z","commit":"1107","message":"I've finished getting the sirentest unit test program working. This shows that \nI need to integrate the primitive types into Class (as these cause crash errors\nwhen they are created - this also kills XMLStream) - these crashes are caught\nproperly by sirentest (as they kill only sirentest_backend, which is restarted\nautomatically). The only real failure is MD5Sum, which gives the wrong digest!\n\n"},{"author":"chryswoods","date":"2009-11-24T20:43:43.501121Z","commit":"1106","message":"I've got the sirentest server and client happily talking to one another now (continually\nsending messages to each other in welsh until they are killed).\n\n"},{"author":"chryswoods","date":"2009-11-24T17:39:11.675539Z","commit":"1105","message":"I've fixed a small bug in XMLStream - have sorted out Mopac on HPCx (so mopacsim.s3 contains\na QM mopac simulation that works on AIX) and have also begun work on 'sirentest' that\nwill automatically run all of the Siren class unit tests. 'sirentest' is a little over-engineered\n(it is a front-end with re-spawning backend, communicating using a custom QByteArray based\nmessage queue over a shared-memory connection) - this is because this will let me play\nwith and learn how to build this kind of respawing peer-peer type application, as this is\nthe model that I will use for the Inspire plugin.\n\n"},{"author":"chryswoods","date":"2009-11-22T20:24:52.540617Z","commit":"1104","message":"I've got the XML streaming class almost working - the file test/Siren/xmlstream.py demonstrates\nit - it saves a few objects, but has problems loading them back up again....\n\nThe XML streamer also allows streaming of binary data using a base64 encoding :-)\n\nThe format of the xml file is very, very similar to idea/xml_format.\n\n"},{"author":"chryswoods","date":"2009-11-21T17:38:02.254006Z","commit":"1103","message":"I am making progress writing the XMLStream class...\n\nSiren is broken\n\n"},{"author":"chryswoods","date":"2009-11-20T23:25:14.015357Z","commit":"1102","message":"I've got Siren compiled and linked, and have got (most) of the python wrappers working.\nThe code works, to an extent, but there are quite a few problems and bugs\n(e.g. in streaming, and in the logger). The whole .getClass() hierarchy\nworks really well :-)\n\nCode is no longer broken - it compiles, links and Siren now needs debugging\n\n"},{"author":"chryswoods","date":"2009-11-20T10:14:44.097599Z","commit":"1101","message":"I've filled in most of the missing functions in Siren - I just need to finish off DataStream and Tester.\nOnce they are complete, I should be able to link and then test Siren (using both the python \ninterface and the new unit testing framework)\n\nSiren is broken (but less broken!)\n\n"},{"author":"chryswoods","date":"2009-11-19T23:39:16.236877Z","commit":"1100","message":"I've fixed the streaming bug on AIX - I had forgot the prototype for SireCAS::Constant, so the\nExBase streaming functions were called directly in place of the SireCAS::Constant \nstreaming functions. Good thing I used magic numbers to check the stream... :-)\n\nI've also added more to Siren and have pretty much sorted out the API of the\nnew streaming interface, and the format of the XML file.\n\nSiren is very broken\n\n"},{"author":"chryswoods","date":"2009-11-18T19:04:33.249717Z","commit":"1099","message":"I've written a good chunk of the polymorphic streaming system. It is all very broken,\nbut it is at last coming together.\n\nSiren is very broken\n\n"},{"author":"chryswoods","date":"2009-11-17T16:50:35.093253Z","commit":"1098","message":"I've expanded the capabilities of the 'sire' program (the restart file runner) and have\nhard coded in MPI compile options for hpcx (together with a flag to disable MPI if\nit is found). This all seems to work :-)\n\nHowever, I've found that hpcx cannot deserialise restart files that contain\nSireCAS::Expression objects - this needs to be debugged. It does correctly\nserialise simulations that don't involve expressions, which can then\nbe ready correctly back on my mac.\n\n"},{"author":"chryswoods","date":"2009-11-17T11:08:40.724659Z","commit":"1097","message":"I've added a hacked, automatic configuration of MPI on HPCx (AIX/xlC), and am committing last\nnights work on Siren (where I am rethinking how I will manage streaming)\n\nSire works but Siren is very broken\n\n"},{"author":"chryswoods","date":"2009-11-16T12:26:03.110908Z","commit":"1096","message":"I've added compilation options and code so that I can completely disable the use of Fortran\ncode in Sire. This is necessary as I am getting too many weird link errors on AIX\nwhen I am trying to link in BLAS with xlC/xlf\n\n(Disabled Siren with this version)\n\nCode compiles, links and runs\n\n"},{"author":"chryswoods","date":"2009-11-15T20:05:21.178217Z","commit":"1095","message":"I've filled in the code for String and Number\n\nSiren compiles but doesn't link\n\n"},{"author":"chryswoods","date":"2009-11-15T17:55:07.885605Z","commit":"1094","message":"I've begun to flesh out the Primitive hierarchy of classes. This will complete\nthe triumvirate on which Siren is based;\n\nPrimitive  - simple, small, non-virtual classes\nObject     - non-shared, mostly immutable, virtual classes\nHandle     - shared, mostly mutable, virtual handles to shared resources\n\nSiren compiles but doesn't link\n\n"},{"author":"chryswoods","date":"2009-11-15T16:14:28.981892Z","commit":"1093","message":"I've created the Handle hierarchy of classes which are used to provide the equivalent\nof Object for shared data types. Handle provides handles with which to handle shared\ndata - it automatically contains functions to lock access to the data. This is necessary\nas Object is for non-shared data (it is copy-on-write, with the most classes being\nimmutable, requiring extension with Interfaces\u003cMutable\u003e to become mutable).\n\nSiren compiles but does not link.\n\n"},{"author":"chryswoods","date":"2009-11-14T21:24:24.947766Z","commit":"1092","message":"I've finished the basics of Siren - all the code compiles, but there are lots of unresolved symbols.\n\nSiren is very broken\n\n"},{"author":"chryswoods","date":"2009-11-14T12:27:12.144595Z","commit":"1091","message":"I'm making more progress with Siren. I've removed Shared as Siren::Object must *never* be\nshared - use Handle for shared objects.\n\nSiren is very broken\n\n"},{"author":"chryswoods","date":"2009-11-13T23:43:02.177516Z","commit":"1090","message":"I've factored out the ObjPtr and ObjRef classes from Object to minimise the \ndependencies in object.h\n\nSiren is very broken\n\n"},{"author":"chryswoods","date":"2009-11-13T21:48:07.129634Z","commit":"1089","message":"I've filled in nearly all classes and functions in Siren::Object, and Siren/object.cpp now compiles.\n\nSiren is still very broken!\n\n"},{"author":"chryswoods","date":"2009-11-13T10:13:27.568024Z","commit":"1088","message":"I'm committing my work to date to abstract the various Sire object systems into\na single consistent (Java-like) hierarchy, called Siren. Once this is finished\nI will refactor the code so that everything is rooted on Siren::Object. This\nwill clean the code, and will make it much easier to work with scripting,\nstreaming and metatypes.\n\nSiren code is very broken - disable it if you want to compile the rest of Sire\n\n"},{"author":"chryswoods","date":"2009-11-09T16:53:15.632832Z","commit":"1087","message":"I've added error handling to the sire job runner - this will now stop trying to \nrun a workpacket that has failed more than five times in a row, and will quit\nthe entire program if there are no non-failed workpackets.\n\n"},{"author":"chryswoods","date":"2009-11-09T15:50:46.617751Z","commit":"1086","message":"I've filled out the \"sire\" restart running executable, supplying full command line options\nand sorting out how it prints to the screen. I've also built in the ability to repeat\nwork packets (so we can run lots of chunks of simulations) and have added a timer so\nthat it knows how long it has remaining, so it won't start chunks that it can't finish.\n\n"},{"author":"chryswoods","date":"2009-11-04T23:43:28.794428Z","commit":"1085","message":"I've removed RestartPacket as SimPacket and SupraSimPacket already perform this task. I've\nfinished a basic implementation in src/apps/sire that runs the restart files that are passed\nas arguments, and that automatically splits the work over all available nodes (so first\none node is taken for the job, and that node is then able to reserve other nodes)\n\n"},{"author":"chryswoods","date":"2009-11-03T16:47:20.325665Z","commit":"1084","message":"I've started changin the 'Sire' executable so that it can work as an MPI task farm processing\nand running simulations that appear in my restart.s3 binary restart files. This will allow me\nto run simulations without having to use the python interface (so the python can be used\nonly for setting up and processing the simulations, rather than running, so that we can\nhave Sire running on compute nodes without running python scripts)\n\n"},{"author":"chryswoods","date":"2009-10-20T15:53:31.874137Z","commit":"1083","message":"Worked around a compiler error (caused by a compiler bug) in xlC\n\n(see \u003chttp://www-01.ibm.com/support/docview.wss?uid=swg1LI74462\u003e)\n\n"},{"author":"chryswoods","date":"2009-10-19T15:38:44.949412Z","commit":"1082","message":"I've fixed an edge-case bug in the identity constraint, have fixed compile bugs in the    \nBLAS interace on HPCx and have added a scaling factor to the charges calculated using \nAM1BCC\n\n"},{"author":"chryswoods","date":"2009-10-16T20:00:56.173835Z","commit":"1081","message":"I've fixed(ish) the infinite loop problem with the linear solver - it isn't really an infinite \nloop - rather it was that finding the best solution when there are more molecules than points\nis a very slow problem (as the non-points added have extremely low costs).\n\n"},{"author":"chryswoods","date":"2009-10-12T15:56:09.247995Z","commit":"1080","message":"I've debugged the MPI messages a little more and have found the source of the problem\nwhereby sometimes MPI would quit with a barrier error - this was because a quit\nmessage would cause the message queues to exit and lose the final quit message\nfrom the master.\n\nI've also found that the 100% cpu problem of compute processes only affects\nOS X and is caused by mpich2 chewing up CPU when waiting on a barrier or \non a broadcast (see techdocs/testmpibarrier.cpp which exhibits this problem).\n\nI will try mpich2 1.2 to see if the new version fixes this problem...\n\n"},{"author":"chryswoods","date":"2009-10-12T07:55:25.011508Z","commit":"1079","message":"I've written some code to test the combined GTOs integral generator.\n\n"},{"author":"chryswoods","date":"2009-10-09T12:42:33.465277Z","commit":"1078","message":"I've got a charge constraint simulation working (test/Squire/chargeconstraint.py). The\nresults look sensible. I've also added \"toString\" functions to the molecule property\nclasses, so that they can be printed more easily.\n\n"},{"author":"chryswoods","date":"2009-10-08T13:56:39.725977Z","commit":"1077","message":"I've had to update Property to fix the dynamic library bug for the Property.isA\u003cT\u003e() \nfunction (as this was stopping the charge constraints from working). I've also\nadded shell pair sets that simplify the calculation of batches of integrals.\n\n"},{"author":"chryswoods","date":"2009-10-06T10:31:13.051511Z","commit":"1076","message":"I've finished (and tested - see test/Squire/am1bcc.py) the AM1BCC charge generator.\n\nIt seems to correctly calculate AM1-BCC charges using antechamber, and includes a z-matrix\ntype test so that charges only need to be recalculated when the conformation of the \nmolecule changes (so preventing recalculation if the molecule is just translated\nor rotated)\n\nI've also fixed a small bug in the zmatrix code, whereby a null zmatrix is returned\nif one is constructed from a basic zmatrix with a complete molecule. This bug\ndoes not affect any current or previous users.\n\n"}]}