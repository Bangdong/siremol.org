{"Page":3,"TotalPages":28,"commits":[{"author":"chryswoods@gmail.com","date":"2014-05-30T11:49:10.424832Z","commit":"2575","message":"I've implemented most of the triple intersection algorithm and get a result that\nis the same as that reported in the paper. I am now about to write a Monte Carlo\nsolver for the volume so that I can perform more tests, and will then add in the \ncode to deal with special edge cases of triple intersection mentioned in \nthe paper\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-30T11:16:41.196412Z","commit":"2574","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-30T11:15:52.941505Z","commit":"2573","message":"Added the algorithm from Gibson and Scheraga paper to calculate the volume of \nintersection of three spheres. Needs to be wrapped and tested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-29T18:27:09.907627Z","commit":"2572","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-29T18:26:55.304152Z","commit":"2571","message":"Added in the code to calculate volume of intersecting spheres (tested against\nknown volumes)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-29T16:04:55.689225Z","commit":"2570","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-29T16:00:20.835820Z","commit":"2569","message":"Starting work on calculating the volume of intersecting spheres\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T16:01:06.216000Z","commit":"2568","message":"I've updated waterswap to provide the option of using the reflection volume to\nhold the swap water cluster in place. I've tested this and it looks like\nit works...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T15:30:52.099055Z","commit":"2567","message":"Fixed some bugs and now the reflection volume extraction and reflection volume moves\nwork really well :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T14:35:43.041680Z","commit":"2566","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T14:33:19.461447Z","commit":"2565","message":"Added functions to extract molecules that will be moved by the reflection sphere/volume\nfrom the set of passed molecules. Also added code to \"shift\" molecules that are just\noutside the volume to move them just inside the volume.\n\nThis needs testing\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T13:26:51.671632Z","commit":"2564","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T13:24:51.895186Z","commit":"2563","message":"I've updated the API of RigidBodyMC to more properly show that the \"restricted volume\"\nmove is actually a reflection volume move (thus a more generic case of the reflection sphere).\n\nI've also updated the code internally to more properly reflect this :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-28T11:11:43.447417Z","commit":"2562","message":"I've debugged and tested the new reflection sphere and reflection volume code. It seems\nto work well and is not pretty quick :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-27T16:10:55.096029Z","commit":"2561","message":"Updating the reflection sphere code so that I can use it with the restricted\nvolume moves code to better sample a restricted volume (the attempt/reject\nmethod is too slow, so I have had to work out the maths of using multiple,\nintersecting reflection spheres).\n\nCode needs testing, so please don't trust this version! (RigidBodyMC with\nreflection sphere or restricted volume sampling)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-27T13:50:28.994394Z","commit":"2560","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-27T13:46:34.833201Z","commit":"2559","message":"I've added code to allow rigid body moves to be restricted to sampling (semi) arbitrary\nvolumes of space\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-12T13:08:43.610642Z","commit":"2558","message":"Fixed a bug with ComponentConstraint where it was saying it was satisfied,\nbut it was not (this was caught by a higher level in the code and resulted\nin an exception, so does not break any existing simulation)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-12T10:10:44.326625Z","commit":"2557","message":"I've updated QuantumToMM so that vacuum correction simulations no longer fail\nbecause of a bug where volume moves were added despite the simulation being\nrun using an infinite cartesian space!\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-06T15:47:37.303332Z","commit":"2556","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-06T15:41:16.611496Z","commit":"2555","message":"Added functionality to VolumeMap allowing the map to be masked using a distance\nmask from a molecule. This should make the masks easier to visualised in VMD etc.\n\nNeeds python wrapping and testing\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-06T11:14:13.972731Z","commit":"2554","message":"Updated WSRC so that waterswap can use the reflection sphere to constrain\nthe position of the swap water cluster.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-06T10:14:01.909499Z","commit":"2553","message":"I've added in unit tests for the central and local reflection spheres, which all pass :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-05T10:45:26.706590Z","commit":"2552","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-05-05T10:37:38.639266Z","commit":"2551","message":"I've added support for per-molecule reflection spheres in RigidBodyMC.\nThis will allow me to use the reflection sphere constraint to hold the\nswap water cluster in place in the waterswap calculations. Now needs\nto be python wrapped and tested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-25T10:16:26.574661Z","commit":"2550","message":"I've added a 'waterview' executable that allows you to visualise the water structure\nin a binding site, both with and without the ligand present. I've also added in a unit\ntest for SireBase::Process so that the bugfix will be permanently fixed ;-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-25T09:36:15.128540Z","commit":"2549","message":"I've fixed a bug in SireBase::Process where it crashed when trying to start\na sub-process. I've also removed the debugging output from VolumeMap\n\n"},{"author":"nividic73","date":"2014-04-23T14:53:29.790971Z","commit":"2548","message":"just cosmetic changes"},{"author":"chryswoods@gmail.com","date":"2014-04-23T11:17:58.874768Z","commit":"2547","message":"Fixed a small missing function. The MolWithResID code has now been tested\nand it does indeed work :-)\n\nligand = system[ MolWithResID(\"LIG\") ].molecule()\n\nworks exactly as you would expect\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-23T11:06:30.866142Z","commit":"2546","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-23T11:00:22.663888Z","commit":"2545","message":"Added in a \"MolWithResID\" molecule identifier class that will make it much easier\nto pick out specific molecules from a file by matching residues within that\nmolecule (e.g. to get the molecule with residue called \"LIG\" from a system, you\nshould be able to code\n\nligand = system[ MolWithResID(\"LIG\") ]\n\nThis needs to be python wrapped and tested...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-23T10:21:04.269229Z","commit":"2544","message":"I've added an analyse_freenrg program to automatically analyse and average\nfree energies collected during a simulation.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-22T15:53:44.127044Z","commit":"2543","message":"I've added code that prints out PDBs of the aligned molecules at the start of the simulation.\nThis should allow the user to check that the ligands are aligning properly before running\nlots of simulation...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-22T15:52:13.324235Z","commit":"2542","message":"I've fixed a bug in the alignment code that meant that, rarely, molecules were not\ncorrectly aligned. I've added new code to check that this is correct at run time,\nand have also added a check to the Quaternion code that makes sure that the passed\nmatrix is a rotation matrix (has a determinant of 1)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-18T15:37:23.617892Z","commit":"2541","message":"Fixed small link bug (missing volumeMap() function!)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-18T15:28:22.382421Z","commit":"2540","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-18T15:12:00.980350Z","commit":"2539","message":"Updated VolMapMonitor to use VolumeMap\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-18T11:28:06.562783Z","commit":"2538","message":"Moved the GridInfo unit test to SireVol (to match the move for GridInfo itself) \nand have written and tested the unit test for VolumeMap\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-18T11:27:26.360265Z","commit":"2537","message":"Filled in all functionality in VolumeMap and have written unit tests and checked\nthat it is working :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-17T16:06:33.208741Z","commit":"2536","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-17T15:41:19.047533Z","commit":"2535","message":"Added useful functionality to GridInfo and have filled in most missing functionality\nin VolumeMap. Now need to wrap and test the code\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-17T11:24:32.302648Z","commit":"2534","message":"I've modified ligandswap so that \"--vacuum\" will swap ligands with a vacuum box.\nThis allows relative hydration free energies to be calculated :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T16:19:06.230669Z","commit":"2533","message":"I've added a wrapper for the lambda trajectory history and have also modified LSRC and WSRC\nto use the correct backwards energy terms (before, I was prematurely taking the negative)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T16:14:51.622243Z","commit":"2532","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T16:11:16.593240Z","commit":"2531","message":"I've fixed a new bug in the calculation of error margins in TI and have added in\nthe ability to record the lambda trajectory in a RETI simulation\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T15:41:50.434082Z","commit":"2530","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T15:36:39.464977Z","commit":"2529","message":"Fixing bugs in how I calculate errors in FEP, TI, Bennetts, fixed incorrect calculation\nof free energies in FEP and Bennetts and removed the use of taylor expansions in the\nfree energy calculations (they add too much noise!)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T11:08:37.766009Z","commit":"2528","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-16T11:06:06.761491Z","commit":"2527","message":"Added the ability to sum only the raw free energy data in FEP and have\nfilled in stubs so that VolumeMap will compile\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-15T16:39:10.245659Z","commit":"2526","message":"I've fixed a bug when reading TIComponents when no components have been collected\nand have begun work to move the VolumeMap code from SireSystem::VolMapMonitor into \na dedicated SireMol::VolumeMap class (as volume maps are quite useful in themselves\noutside of the SystemMonitor framework)\n\nCode is broken as I have to go home ;-)\n\n"},{"author":"nividic73","date":"2014-04-15T15:45:51.009555Z","commit":"2525","message":"enabled mixed precision mode"},{"author":"chryswoods@gmail.com","date":"2014-04-15T15:25:20.149277Z","commit":"2524","message":"Fixed a small bug in the LSRC script\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-15T15:18:16.430571Z","commit":"2523","message":"Fixed bugs with the application of WindowedComponent constraints. These caused exceptions to be\nraised regarding unsatisfied constraints\n\n"},{"author":"nividic73","date":"2014-04-15T13:36:45.826112Z","commit":"2522","message":"bugs fixed"},{"author":"nividic73","date":"2014-04-15T13:35:11.051383Z","commit":"2521","message":"fixed a bug in standard MD"},{"author":"nividic73","date":"2014-04-15T10:53:15.272483Z","commit":"2520","message":"Changes to support the new openmm6.0 features"},{"author":"nividic73","date":"2014-04-15T10:24:17.213260Z","commit":"2519","message":"update DCD writer and adding support to perform free energy calculation"},{"author":"chryswoods@gmail.com","date":"2014-04-14T16:27:15.784729Z","commit":"2518","message":"Fixed a small problem with the python wrapper\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-14T15:54:52.828699Z","commit":"2517","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-14T15:47:55.389003Z","commit":"2516","message":"I've moved GridInfo / GridIndex from SireMM to SireVol as it is better placed there,\nand I am beginning to use it a lot in the other Sire modules\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-14T15:12:45.174129Z","commit":"2515","message":"Committing small updates to the ligandswap module\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-14T15:11:49.682632Z","commit":"2514","message":"Fixed problems with application of constraints. With WindowedComponent, if the target value\nwas already set to the correct value previously, but changes, this constraint will not change\nit back to the correct value. This affected the FEP free energies in ligandswap for\nlambda = 0.995. Code is fixed\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-14T13:12:59.192075Z","commit":"2513","message":"Removed exception thrown if a molecule has no internal parameters\n\n"},{"author":"nividic73@googlemail.com","date":"2014-04-11T16:14:29.119363Z","commit":"2512","message":"added getPotentialEnergy()"},{"author":"nividic73","date":"2014-04-11T16:05:39.382877Z","commit":"2511","message":"added getPotentialEnergy() function - code broken"},{"author":"chryswoods@gmail.com","date":"2014-04-09T16:10:21.200925Z","commit":"2510","message":"Fixed bugs in the VolMapMonitor and DX writer. They both seem to work well, and I have\nsuccessfully created a volume map around a cluster of water molecules that visualises\nwell in VMD :-). I now need to test the monitoring capabilities via a simulation.\n\nCode compiles, links, runs and passes unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-09T14:54:37.485225Z","commit":"2509","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-09T14:46:02.151281Z","commit":"2508","message":"I've added a VolMapMonitor class which will monitor the volume occupied by \natoms in space during a simulation. To write the resulting grids out into a format\nthat can be read by VMD, I've also added a DX grid writer class.\n\nCode needs to be debugged.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-08T14:22:10.426712Z","commit":"2507","message":"Fixed a bug that prevented analysis of the ligandswap simulations\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-08T10:52:17.930732Z","commit":"2506","message":"Debugging the ligandswap script. Initial energies look good and am now ready for\na ligand\u003c=\u003eligand swap test (which should give a delta G of 0). Also updated the \nalign script to include a flag for matching light atoms\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-08T10:51:18.506228Z","commit":"2505","message":"Small update to fix the interpretation of the 'prematch' flag\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-08T10:13:36.868791Z","commit":"2504","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-08T10:04:47.160423Z","commit":"2503","message":"I've modified the MCS matcher so that it can match hydrogens, and have updated\nthe API for AtomMatcher et al so that virtual overloading \"match\" doesn't block\npython wrapping of the other 'match' functions. To do this, I've had to make\n'match' non-virtual, and to have this call the virtual 'pvt_match' function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-07T16:19:02.554924Z","commit":"2502","message":"Working on the ligandswap script. The two systems have been loaded and the simulation \nis able to progress... Still likely to be buggy and incorrect however! ;-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-04-01T10:03:59.904987Z","commit":"2501","message":"Updated the align script so that the match can be modified by specifying atom matches\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T16:13:50.855493Z","commit":"2500","message":"Added in proper support for user-supplied matching in FindMCS. This forces the MCS algorithm\nto only return matches that include the mapping supplied by the user\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T16:13:13.614898Z","commit":"2499","message":"Added in wrappers for QHash containers needed by AtomIDMatcher\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T15:39:46.656112Z","commit":"2498","message":"Adding in updated boost headers that includes the boost::graph code used in findMCS\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T15:36:17.150856Z","commit":"2497","message":"Python wrapper for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T15:31:38.768316Z","commit":"2496","message":"Added conversion from QHash to match for AtomIDMatcher\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T09:26:14.266829Z","commit":"2495","message":"Python wrappers for the last commit\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T09:19:26.208580Z","commit":"2494","message":"Committing the fixed align code, with an LSRC that at least compiles...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-31T09:18:38.970410Z","commit":"2493","message":"I've moved most of the AtomMatcher classes to atommatchers.h/.cpp to reduce dependencies\nin the rest of the code. I've also fixed bugs such that alignment seems to work, even\nfor complex cases (e.g. peramivir on top of oseltamivir)\n\n"},{"author":"nividic73","date":"2014-03-27T13:58:11.305227Z","commit":"2492","message":"test submission"},{"author":"nividic73@googlemail.com","date":"2014-03-27T13:13:15.648416Z","commit":"2491","message":"test submission VM"},{"author":"nividic73@googlemail.com","date":"2014-03-27T13:09:46.661942Z","commit":"2490","message":"Test submission from VM"},{"author":"chryswoods@gmail.com","date":"2014-03-27T11:02:56.249747Z","commit":"2489","message":"Code updates and bugfixes needed to get the align script to work\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-27T11:02:29.994550Z","commit":"2488","message":"Added a 'transform' script for translating and rotating molecules from the command line.\nUpdated the 'align' script so that it now works ;-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-26T11:34:18.751558Z","commit":"2487","message":"python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-26T11:29:54.360615Z","commit":"2486","message":"Added in AtomMatchInverter so that the atom matching occurs the right way round \nfor mol.move().align() and have added a 'timeout' parameter to AtomMCSMatcher\nso that we can limit how long we will need to wait\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-26T11:23:32.086302Z","commit":"2485","message":"Added a script to align molecules\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-25T17:58:49.488625Z","commit":"2484","message":"Python wrappers including the rmsd function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-25T17:54:53.595814Z","commit":"2483","message":"I've updated and nearly finished the alignment code. In creating this I noticed\nthat my matrix was actually performing matrix multiplication with the *transpose*\nof the correct matrix! This has not been a problem before as I have been using\nrandom rotations, but is obviously a problem for alignment. I have fixed the problem\nand have added a unit test in the python wrappers to check for this in the future.\n\nI have also added code to evaluator to calculate RMSDs\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-25T17:53:23.207312Z","commit":"2482","message":"Added in some unit tests to check that my matrix and quaternion rotations are\nbehaving, and that I can safely transform between matrices and quaternions\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-24T18:09:50.014894Z","commit":"2481","message":"Fixed a compile bug. Now everything compiles and links.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-24T17:30:32.393022Z","commit":"2480","message":"Fixed problems wrapping the \"transform\" functions\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-24T15:29:02.068737Z","commit":"2479","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-24T15:23:24.184786Z","commit":"2478","message":"python wrapper help\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-24T15:18:18.436140Z","commit":"2477","message":"Committing code that compiles - this merges in \"Transform\" to all of the coords\nand movement classes\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-24T14:49:54.349675Z","commit":"2476","message":"Fixing bugs in Mover::align by adding in a special \"Transform\" class that can be used\nto hold all of the information about a geometric transformation\n\nCode is broken\n\n"}]}