{"Page":1,"TotalPages":28,"commits":[{"author":"julienmich@googlemail.com","date":"2015-04-01T22:42:49.139477Z","commit":"2775","message":"minimizer method for OpenMMFrEnergyST now working\n\n"},{"author":"julienmich@gmail.com","date":"2015-04-01T15:33:06.730637Z","commit":"2774","message":"Fixed a method declaration syntax error in OpenMMFrEnergySt::minimzer(...)"},{"author":"julienmich@gmail.com","date":"2015-04-01T15:30:17.589726Z","commit":"2773","message":"Commit of the python wrappers for new interface to OpenMMFrENergyST "},{"author":"julienmich@googlemail.com","date":"2015-04-01T14:53:21.389245Z","commit":"2772","message":"Corelib commit of minimizer method for OpenMMFrEnergyST object (code is broken)\n"},{"author":"julienmich@googlemail.com","date":"2015-03-30T08:24:31.430696Z","commit":"2771","message":"Added support for distance restraints (python layer)\n"},{"author":"julienmich@googlemail.com","date":"2015-03-30T08:23:13.471556Z","commit":"2770","message":"Added support for distance restraints in OpenMM free energy calculations\n"},{"author":"nividic73@googlemail.com","date":"2015-02-25T22:14:13.781189Z","commit":"2769","message":"gradient is calculated per block and not as cumulative gradient - update interface"},{"author":"nividic73@googlemail.com","date":"2015-02-25T21:57:48.327929Z","commit":"2768","message":"The gradient is calculated per block and not as accumulative gradient"},{"author":"nividic73@googlemail.com","date":"2015-02-04T14:38:09.936918Z","commit":"2767","message":"equlibration bug"},{"author":"nividic73@googlemail.com","date":"2014-11-29T00:02:17.490751Z","commit":"2766","message":"test"},{"author":"nividic73@googlemail.com","date":"2014-11-28T23:15:57.988217Z","commit":"2765","message":"CPU flag bug correction"},{"author":"nividic73@googlemail.com","date":"2014-11-28T23:15:29.255701Z","commit":"2764","message":"test commit"},{"author":"nividic73@googlemail.com","date":"2014-11-28T23:14:37.296863Z","commit":"2763","message":"CPU flag bug correction"},{"author":"chryswoods@gmail.com","date":"2014-11-17T11:00:28.349673Z","commit":"2762","message":"Adding in the fixed version of QuantumToMM that correctly calculates and passes in the charge\nof charged ligands\n\n"},{"author":"julienmich@googlemail.com","date":"2014-10-30T13:41:42.599453Z","commit":"2761","message":"\npython code for stefano's branch\n\nsvn copy https://sire.googlecode.com/svn/python2/branches/users/julien https://sire.googlecode.com/svn/python2/branches/users/stefano\n\n"},{"author":"julienmich@googlemail.com","date":"2014-10-30T13:39:41.172892Z","commit":"2760","message":"\nCreating a branch of julien for stefano\n\nsvn copy https://sire.googlecode.com/svn/corelib/branches/users/julien https://sire.googlecode.com/svn/corelib/branches/users/stefano\n\n"},{"author":"julienmich@googlemail.com","date":"2014-10-29T16:48:28.482163Z","commit":"2759","message":"Bugfix DCD trajectory writer\n"},{"author":"julienmich@gmail.com","date":"2014-10-28T16:23:21.707396Z","commit":"2758","message":"updated wrappers"},{"author":"julienmich@googlemail.com","date":"2014-10-28T15:40:15.046829Z","commit":"2757","message":"I have started modifying the rigid body code so it is possible to pass manually atomic forces to be used to compute the forces and torques of \nacting on a rigid body made of atoms \n"},{"author":"chryswoods@gmail.com","date":"2014-10-27T11:39:19.400110Z","commit":"2756","message":"Fixed some bugs compiling the new dependencies on Linux\n\n"},{"author":"chryswoods@gmail.com","date":"2014-10-24T11:19:03.648935Z","commit":"2755","message":"Updated the python interpreter to 3.4.2 to fix a compile error on Yosemite. Also updated\nto ensure that Python finds and links to the bundled zlib, ssl and sqlite libraries.\nAlso added scripts that can automatically scan for and correct RPATH issues on OS X\nand to install the default Sire modules (nose, ipython) using easy_install and pip.\n\nUpdated package_sire so that it installs the default Sire modules (and tests their\ninstallation) and then updates RPATH before packaging. Also added a unit test\nfor Sire.Maths.Matrix to ensure that matrix multiplication is working\n\nAll tested on OS X (Yosemite). Need to test on lower OS X and Linux\n\n"},{"author":"chryswoods@gmail.com","date":"2014-10-24T11:15:15.272501Z","commit":"2754","message":"Added in the bundles for new dependencies opensll, zlib and sqlite. This should help\nmake it easier to build and package binaries of Sire that can be extended using\npip and easy_install. Currently only tested on OS X. Need to test on Linux\n\n"},{"author":"julienmich@googlemail.com","date":"2014-10-23T20:56:27.098011Z","commit":"2753","message":"bugfix rbworkspace in evotec branch"},{"author":"julienmich@googlemail.com","date":"2014-10-23T19:50:57.205244Z","commit":"2752","message":"Bugfixes to rb code. Some matrices elements are not initialise an order consistent with the behavior of SireMaths::Matrix.\n\nThe desired behavior has been restored by use of .transpose() before matrix multiplication, but the matrix objects are still 'incorrect'\n \n"},{"author":"julienmich@googlemail.com","date":"2014-10-21T08:23:29.382989Z","commit":"2751","message":"Updated python wrappers for evotec2014pre.1 branch"},{"author":"julienmich@googlemail.com","date":"2014-10-21T08:22:19.550605Z","commit":"2750","message":"Commit of changes to cljpotential.cpp on evotec2014pre.1 branch"},{"author":"julienmich@googlemail.com","date":"2014-10-21T08:18:39.372258Z","commit":"2749","message":"\nAdded support for reaction field in the force table calculation subroutines\n\n"},{"author":"nividic73","date":"2014-10-14T12:32:31.723226Z","commit":"2748","message":"temporary fix to the dcd writing problem with ions"},{"author":"nividic73","date":"2014-09-25T15:23:01.584098Z","commit":"2747","message":" "},{"author":"nividic73","date":"2014-09-25T14:45:38.197940Z","commit":"2746","message":"fixed bug in the Platform selection"},{"author":"julienmich@googlemail.com","date":"2014-09-22T13:52:51.947613Z","commit":"2745","message":"svn mv https://sire.googlecode.com/svn/corelib/tags/evotec2014pre\nhttps://sire.googlecode.com/svn/corelib/tags/evotec2014pre.1\n\n"},{"author":"julienmich@googlemail.com","date":"2014-09-22T13:51:13.884706Z","commit":"2744","message":"svn copy https://sire.googlecode.com/svn/python2/branches/users/julien\n\nhttps://sire.googlecode.com/svn/python2/tags/evotec2014pre.1\n\n"},{"author":"julienmich@googlemail.com","date":"2014-09-18T09:04:22.663765Z","commit":"2743","message":"svn copy https://sire.googlecode.com/svn/python2/branches/users/julien https://sire.googlecode.com/svn/python2/tags/evotec2014pre\n\n"},{"author":"julienmich@googlemail.com","date":"2014-09-18T09:02:52.319797Z","commit":"2742","message":"Updated sire_test so can run tests in test folders, e.g\n\n~/sire.app/bin/sire_test Tools\n\nAdded Tools to the list of test folders to install\n\nUpdated test_idpoints.py to delete generated output after test has run. \n\n\n"},{"author":"julienmich","date":"2014-09-17T14:49:00.543737Z","commit":"2741","message":"snapshot of python2 evotec pre release\n"},{"author":"julienmich","date":"2014-09-17T14:48:12.738425Z","commit":"2740","message":"snapshot of corelib, evotec pre release\n\n"},{"author":"julienmich","date":"2014-09-17T14:20:11.894083Z","commit":"2739","message":"Disabled a debug statement that is triggered by the way Nautilus setup force fields\n\n"},{"author":"julienmich@gmail.com","date":"2014-09-16T12:26:58.997049Z","commit":"2738","message":"New wrappers with support for energytable"},{"author":"julienmich@gmail.com","date":"2014-09-16T12:26:32.202641Z","commit":"2737","message":"Bugfixes to get wrappers to compile "},{"author":"julienmich@gmail.com","date":"2014-09-16T09:48:35.942936Z","commit":"2736","message":"Commit of updated python wrappers"},{"author":"julienmich","date":"2014-09-16T09:12:41.878096Z","commit":"2735","message":"Forgot to remove incorrect entry for atombeading.h\n\n"},{"author":"julienmich","date":"2014-09-16T09:08:18.987242Z","commit":"2734","message":"Added back energytable interface to system using code from julienmich's branch\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-15T18:41:28.846745Z","commit":"2733","message":"Stubbed out the functions that will be needed for the force, potential and field\ncalculations.\n\n"},{"author":"julienmich","date":"2014-09-15T12:24:40.344546Z","commit":"2732","message":"Minor changes to UI in analyse_freenrg and in output of somd-freenrg\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T15:47:25.247945Z","commit":"2731","message":"Increased the release number to 2014.4\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T14:47:52.843400Z","commit":"2730","message":"Merged devel into trunk\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T14:13:02.689953Z","commit":"2729","message":"Finished all of the reaction field functions. Now completed the soft core\nintramolecular function :-)\n\nCode compiles, links, runs and passes all unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T14:12:27.812364Z","commit":"2728","message":"Added in the unit tests for the soft core intramolecular reaction field function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T13:46:03.852415Z","commit":"2727","message":"Finished the intramolecular reaction field function. Just the soft core\nintramolecular reaction field function to go...\n\nCode compiles, links, runs and passes unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T13:39:13.313266Z","commit":"2726","message":"Adding in more unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T11:45:55.903582Z","commit":"2725","message":"Finished writing the CLJSoftRFFunction. Now have a working intermolecular soft core\nreaction field function that passes all of its unit tests\n\nCode compiles, links, runs and passes all unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T11:45:21.032994Z","commit":"2724","message":"Added unit test for the soft reaction field function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T11:33:38.862371Z","commit":"2723","message":"Finished CLJRFFunction. Now have a working intermolecular reaction field\nfunction that passes all of its unit tests :-)\n\nCode compiles, links, runs and passes unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-12T11:32:55.711379Z","commit":"2722","message":"Added unit tests for CLJRFFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-09T15:29:33.051263Z","commit":"2721","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-09T15:26:15.665838Z","commit":"2720","message":"Stubbed out the reaction field CLJ functions...\n\n(and fixed an annoying typo in the last commit - code is now compiling,\nrunning and passing all unit tests!)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-09T14:49:12.160240Z","commit":"2719","message":"Added in the CLJSoftIntraShiftFunction. Now have a complete set of inter and intramolecular,\nhard and soft core electrostatic shifting functions, which all work and all pass\ntheir respective unit tests :-)\n\nCode compiles, links, runs and passes all unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-09T14:46:44.726854Z","commit":"2718","message":"Added in a unit test for the new CLJSoftIntraShiftFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-09T13:11:45.843125Z","commit":"2717","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-09T13:10:40.912004Z","commit":"2716","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T14:55:26.886038Z","commit":"2715","message":"Stubbed out the CLJSoftIntraShiftFunction...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T10:53:38.026788Z","commit":"2714","message":"Fixed a compile bug on linux\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T10:50:47.439284Z","commit":"2713","message":"Added in the unit tests for CLJSoftShiftFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T10:50:01.710097Z","commit":"2712","message":"I've finished writing the CLJSoftShiftFunction that provides a soft-core intermolecular\nshift-electrostatics function. This passes the unit tests that I will add in the next\ncommit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T09:25:54.744206Z","commit":"2711","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T09:25:31.477313Z","commit":"2710","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-09-08T09:17:33.581996Z","commit":"2709","message":"Beginning work on the soft core shift electrostatics function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-26T15:18:32.985430Z","commit":"2708","message":"I've fixed some bugs in response to the new unit test. The unit test now\npasses and I can run simulations that correctly compare the old\nand new intramolecular forcefields\n\nCode compiles, links, runs and passes all unit tests\n\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-26T15:17:40.740880Z","commit":"2707","message":"Added in a unit test for the new 1-4 calculation in InternalFF.\nCan now run simulations that compare IntraCLJFF + InternalFF (no-1-4)\nagainst IntraFF + InternalFF (with 1-4), which both give\nthe same answer (with the new code being faster!)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-26T13:39:25.548976Z","commit":"2706","message":"Python wrappers for  the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-25T15:17:41.369318Z","commit":"2705","message":"Finished integrating CLJ14Group with InternalFF so that I can now calculate\n1-4 nonbonded energies as part of calculating the bond, angle, dihedral\nenergies etc.\n\nCode needs python wrapping and unit testing\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-25T14:05:44.984287Z","commit":"2704","message":"Added in components for the intramolecular 1-4 total, coulomb and LJ energies\n\n"},{"author":"nividic73","date":"2014-08-23T11:30:56.319145Z","commit":"2703","message":"fixed bug. Soft core was not correctly applied between To dummy and From dummy atoms at lam=0,1"},{"author":"nividic73","date":"2014-08-23T11:30:28.251837Z","commit":"2702","message":"fixed bug. Soft core was not correctly applied between To dummy and From dummy atoms at lam=0,1"},{"author":"chryswoods@gmail.com","date":"2014-08-22T16:19:31.767846Z","commit":"2701","message":"Fixed bugs revealed by unit testing. CLJ14Group now seems to behave well :-)\n\nCode compiles, links, runs and all unit tests pass\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-22T16:19:04.689897Z","commit":"2700","message":"Added in unit tests for the CLJ14Group\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-22T14:27:30.915206Z","commit":"2699","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-22T14:21:28.200042Z","commit":"2698","message":"Added in all the code for CLJ14Group, which will be used to calculate\n1-4 scaled nonbonded interactions. This now needs python wrapping\nand testing\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-22T09:47:15.690900Z","commit":"2697","message":"I've added an 'isBiased' function to Sampler that allows the different move\ntypes to skip the calculation of probabilities if the move is not biased.\nThis saves a significant amount of time, especially for residue move\n(about 1 second per 1000 moves!). With this change, the new energy\ncode is significantly faster than the old energy code.\n\nCode compiles, links, runs and all unit tests pass\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T16:22:39.184199Z","commit":"2696","message":"Starting work on adding in the forcefield for calculating 14-nonbonded\ninterations (as this is no longer performed by IntraFF). \n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T11:21:54.877681Z","commit":"2695","message":"Updated the unit test to remove sources of randomness and to reduce the\nlength of the simulation. It does just look like numerical imprecision\naffecting the occasional move...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T11:05:20.510093Z","commit":"2694","message":"Updated the IntraGroupFF test to check that errors were not caused by lack of precision.\nI think that there is something random going on, perhaps caused by an uninitialised\nvariable?\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T10:41:10.804961Z","commit":"2693","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T10:38:12.096350Z","commit":"2692","message":"Updated CLJExtractor and CLJGroup so that they can tell when a change of molecule\ncauses no change in the atoms selected in the group. This was needed to optimise\nthe IntraGroupFF as without this change, the energy was continually recalculated\nfrom scratch. Now, updating one half of the molecule will not change the other\nhalf, so the energy is calculated quickly using a delta.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T10:37:03.599435Z","commit":"2691","message":"Reduced the number of moves in the test as numerical imprecision from\ncalculating the energy in different ways causes one move to be accepted/rejected\ndifferently between the old and new forcefields.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-21T09:56:47.827668Z","commit":"2690","message":"Updated the test_intragroupff.py unit test to work around the problem\nthat the benchmark old IntraGroupCLJFF forcefield is broken...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-20T16:12:29.836421Z","commit":"2689","message":"Added in a unit test for the IntraGroupFF. This passes, and indeed performs well.\nIndeed, this has revealed that the old IntraGroupCLJFF (which has never been\nused, as far as I know) is actually buggy and gives the wrong energy when\nmolecules are moved! The only problem with IntraGroupFF is that the energy\nrecalculation is a little too slow when part of a molecule is moved.\n\nCode compiles, links, runs and all unit tests pass\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-20T16:10:49.267600Z","commit":"2688","message":"Fixed a bug in CLJAtoms that caused an exception when an empty molecule was added.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-20T13:45:53.649492Z","commit":"2687","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-20T11:22:45.151210Z","commit":"2686","message":"Added in the IntraGroupFF. This compiles and links, but needs wrapping and testing\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-20T10:05:27.911022Z","commit":"2685","message":"Fixed a small bug in analyse_freenrg.py and have also added a unit test\nfor protein backbone moves for the new IntraFF. \n\nCode compiles, links, runs and all unit tests pass\n\n"},{"author":"julienmich","date":"2014-08-19T14:30:17.345973Z","commit":"2684","message":"Fixed a bug in OpenMMMD.py which meant the soft-core energies of todummy-fromdummy pair interactions was too hard. \nWork in progress on support for multiple gradients.s3 files as input to analyse_freenrg.py (code is broken)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-14T16:30:45.656375Z","commit":"2683","message":"Added functionality to sire_test. Allowed tests to be restricted to \nindividual directories and have also added clearer output that will\nmake it easier to tell if any tests failed, and which tests failed.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-14T16:03:35.640317Z","commit":"2682","message":"I've fixed bugs revealed by the unit tests and have an IntraFF that is pretty\nwell working :-). While all of the current tests pass, I know that there\nis an energy leak when I move part of a multi-residue molecule (e.g. protein).\n\nCode compiles, links, runs and all unit tests pass\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-14T16:01:36.770318Z","commit":"2681","message":"Adding in the unit tests for the new IntraFF forcefield. So far these tests\npass, but they only test moving single-residue molecules. My quick test\nof multi-residue molecules suggests that I have an energy leak somewhere...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-14T14:27:08.995119Z","commit":"2680","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-08-14T14:23:38.266520Z","commit":"2679","message":"I've added in the code for the intramolecular version of InterFF, IntraFF. This needs\nto be wrapped and tested...\n\n"},{"author":"julienmich@gmail.com","date":"2014-08-14T11:51:21.862592Z","commit":"2678","message":"Forgot to set the environment variable OPENMMDIR which caused incorrect generation of the OpenMM wrappers"},{"author":"julienmich@gmail.com","date":"2014-08-13T20:58:33.319499Z","commit":"2677","message":"added a bunch of wrappers that were not on version control. renamed sommmd to somd"},{"author":"julienmich@gmail.com","date":"2014-08-13T20:49:01.975744Z","commit":"2676","message":"commit of the python wrappers"}]}