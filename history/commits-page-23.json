{"Page":23,"TotalPages":28,"commits":[{"author":"chryswoods","date":"2008-06-06T19:43:09.963245Z","commit":"575","message":"SireMol has now been wrapped (mostly!)\n\n"},{"author":"chryswoods","date":"2008-06-06T19:42:18.884701Z","commit":"574","message":"SireMol has now been wrapped (mostly!)\n\n"},{"author":"chryswoods","date":"2008-06-06T16:59:35.365700Z","commit":"573","message":"I'm sorting out the code so that it can be exposed to python...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-06-06T16:54:02.256784Z","commit":"572","message":"I'm now working on wrapping up SireMol - just some missing SireMol functions to write...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-06-06T12:11:16.592646Z","commit":"571","message":"The ID and Units libraries are now wrapped up. I need to add the code to expose the free\nfunctions and free operators.\n\n"},{"author":"chryswoods","date":"2008-06-06T11:15:29.608534Z","commit":"570","message":"I've added the directories to hold the wrappers for the other Sire libraries.\n\n"},{"author":"chryswoods","date":"2008-06-05T15:12:04.370449Z","commit":"569","message":"The SireCAS library is now wrapped and working!\n\n"},{"author":"chryswoods","date":"2008-06-05T13:56:44.796566Z","commit":"568","message":"I've completed the move - the python2 wrapper autogenerate and compile correctly from\ntheir new location - I've just modified svn:ignore so I am not blinded by dozens of \nauto-generated files!\n\n"},{"author":"chryswoods","date":"2008-06-05T13:30:09.326915Z","commit":"567","message":"I've added the python2 binding code to the python2 subproject directory.\n\n"},{"author":"chryswoods","date":"2008-06-05T13:24:42.714069Z","commit":"566","message":"I've created the directory structure for the python2 bindings\n\n"},{"author":"chryswoods","date":"2008-06-05T13:22:25.350487Z","commit":"565","message":"I've moved the C++ code into the corelib directory. This will allow me to separately develop Sire\nfrom the python bindings (and perhaps other bindings...)\n\n"},{"author":"chryswoods","date":"2008-06-05T13:17:30.282352Z","commit":"564","message":"Creating the directories to hold the sub-projects - Sire and the Python2 bindings\n\n"},{"author":"chryswoods","date":"2008-06-05T13:15:59.035614Z","commit":"563","message":"Committing some changes that have been sitting around in devel for ages...\n\n"},{"author":"chryswoods","date":"2008-06-05T13:14:46.760372Z","commit":"562","message":"I've written a new parser to autogenerate the python (in a separate directory) - this uses\ntags embedded in the C++ to decide which classes to expose. So far SireMaths, SireError, \nSireBase and SireVol all wrap up nicely.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-06-03T12:22:12.403067Z","commit":"561","message":"I'm now going to try and rebuild the python wrappers for the classes, so that I can\ninteractive testing calculations.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-06-03T07:51:51.182282Z","commit":"560","message":"The energy of the water box with cutoff and periodic boundaries now appears to be correct.\nHowever, it is very slow - about half the speed that I would expect, and openMP doesn't add\nanything. I think that this is because I am trashing cache and hitting memory. I'll need\nto think about how I can improve things...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-06-02T15:49:19.361268Z","commit":"559","message":"I'm fixing bugs in the energy routines...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-06-02T07:50:14.591446Z","commit":"558","message":"I've fixed the bug (forgot that it was 4 * epsilon, not just epsilon in the LJ equation) and \nnow Sire gets the same intermolecular CLJ energy as ProtoMS for the water box.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-14T07:44:01.286643Z","commit":"557","message":"The water test in Sire is not quite right - the coulomb energy is correct, but the LJ energy is wrong...\n\nI am debugging...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-09T09:26:48.000919Z","commit":"556","message":"I've fixed the problem regarding the problem of not matching templates across shared library \nboundaries, and now Sire on the Mac is able to calculate the energy.\n\nThe problem was caused because GCC implements RTTI by comparing the pointer to the \ntype_info object for the virtual class, rather than doing a string comparison of the \nname of the class (comparing type_info::name()). This breaks for a template class instantiated\nin two different dynamically shared libraries (DSO) (or in a library and the main app) as G++ creates a copy of\nthe template class in each library, each with its own type_info object. These objects have\ndifferent pointers, so G++ reports that they are different objects and dynamic_cast fails.\n\nThe problem is seen when symbol hiding is turned on, as the type_info objects created for\neach copy of the template class are not exported from the library. However, if the symbols\nfor the type_info objects were exported, then the linker would be able to see that they \nare the same, and would then fix the problem for us by merging the references. The solution,\ntherefore, is to ensure that the symbols for the type_info objects associated with \npolymorphic template classes are exported in all libraries where the template is \ninstantiated.\n\nOn Linux, gcc will export all symbols by default. Only gcc \u003e= 4 has the ability to hide\nsymbols, and this has to be deliberately turned on. However, if gcc symbol hiding is switched\non, then you will see this problem on Linux as well. (e.g. if -fvisibility-hidden is used)\n\nOn Mac and Windows symbol hiding is the default, so this is a problem on these systems.\n\nOne solution I saw in forums was to export *all* symbols in the libraries that instantiate\nthe template. While this would work, it is hardly ideal as you lose all the benefits of\nusing symbol hiding!\n\nFortunately, an easier solution is available. All you need to do is to mark the template\nclass itself as being visible, and this with then mark all of its functions and \nancillary classes (including type_info) as being visible. So, on gcc, just change;\n\ntemplate\u003cclass T\u003e\nclass Foo : public Bar\n{ ... };\n\nto;\n\ntemplate\u003cclass T\u003e\nclass __attribute__((visibility(\"default\"))) Foo : public Bar\n{ ... };\n\nThis works for GCC on both Linux and Mac.\n\nOn windows, I think that you would write something like;\n\ntemplate\u003cclass T\u003e\nclass __declspec(dllexport) Foo : public Bar\n{ ... };\n\nthough I've not tried this yet.\n\nIn Sire, I use the macro SIRE_EXPORT to identify symbols that must be exported (this is copied\nfrom Q_DECL_EXPORT provided by Qt), so in this commit I have changed the declaration of \nall polymorphic template classes to;\n\ntemplate\u003cclass T\u003e\nclass SIRE_EXPORT Foo : public Bar\n{ ... };\n\nWhile this will all work for libraries that are linked with the executable, I am not\nsure that this fixes problems when loading libraries as a plugin (e.g. loading a \nlibrary connected to a python module). For plugins to work, I believe that the \nlibrary must be loaded with a dlopen() with RTLD_GLOBAL.\n\n"},{"author":"chryswoods","date":"2008-05-09T07:54:18.096832Z","commit":"555","message":"Small typo in CMakeLists - libFoo.h should have been libfoo.h (I hate case-insensitive filesystems...!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-09T07:52:08.331510Z","commit":"554","message":"I've written a short test case in build/test_compiler that tests whether RTTI across shared library\nboundaries is working. Currently on my Mac, it isn't...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-08T10:25:51.457223Z","commit":"553","message":"I've fixed some bugs that prevented Sire from compiling on Linux. Now it compiles, and \nit actually seems to work. It calculates an energy of -16542.5 kcal mol-1 for the \nbox of water (I need to check if this is correct...)\n\nLinux doesn't seem to have a problem with RTTI of templates. I think I'll need to look\nat the link flags of my libraries...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-08T09:14:30.250835Z","commit":"552","message":"I've sorted out the bug in PropertyMap that was causing me to not find the properties (and in doing so, \nI've also added backtrace functionality support for OS X Leopard). However, I've now run into the problem\nthat RTTI of template classes is not working across shared library boundaries. This is a known problem \nwith GCC (see \u003chttp://lists.apple.com/archives/xcode-users/2006/Mar/msg00125.html\u003e), and I'll have\nto find out how to solve it... (as I don't want to use a factory to create all of my C++ templates...)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-07T07:50:29.188730Z","commit":"551","message":"I'm now testing adding molecules to a forcefield and calculating the energy. Parameterising\nTIP4P seems to have worked - there is just now a little difficulty with InterCLJFF extracting\nthe right parameters...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-06T21:58:12.697828Z","commit":"550","message":"I'm just sketching out my ideas for the new SireDB - essentially just a holder for a more\nbasic database class (based directly on SQLite) and also a DiskCache, which will allow\nthe code to cache objects temporarily on disk, thereby allowing for better memory \nmanagement (i.e. some memory management!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-06T21:32:16.118215Z","commit":"549","message":"I've renamed SireDB to SireMMDB as the classes in this directory are targetted at assigning\nMM forcefield parameters...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-06T15:52:28.399447Z","commit":"548","message":"I've finished updating ResProperty etc. to use ResVariantProperty etc.\n\nI've also begun work on the Trajectory class so that I can do something with the read-in\ntrajectories contained in a PDB file.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-06T11:57:26.771983Z","commit":"547","message":"I've updated the code to use PackedArray\u003cQVariant\u003e for the generic property holder (well, for \nAtomProperty only so far, but the rest aren't far behind). I've also updated the code so that\nit compiles with Qt 4.4\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-05T16:59:52.386457Z","commit":"546","message":"I've now got nearly all of the information in the ATOM/HETATM part of the PDB file read into \na Molecule :-)\n\nAll that is left is the alternative atoms and the other frames of any animation.\n\nThis appears to read in correctly the PDB files in test/io\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-05T10:55:00.937443Z","commit":"545","message":"I've added a quick and simple cache that allows the names of parts of the molecule (atom, residue etc.)\nto be re-used - so we don't have a thousand identical \"O00\" strings from a box of water!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-05T10:36:13.350194Z","commit":"544","message":"I've now got the PDB reader to use customizable group cutting, and atom, residue, CutGroup,\nchain and segment name mangling.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-04T17:16:05.373212Z","commit":"543","message":"I'm now adding the properties/parameters control to PDB and have added a StringMangler set of classes\nthat will allow for fine control of how the atom, residue, chain and segment names are changed\nas the PDB file is read.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-04T14:25:10.012113Z","commit":"542","message":"The PDB reader now also sets the coordinates of the atoms (via a \"coordinates\" property!). Reading\nin all of test/io/p38.pdb takes just 0.4s, which is probably fast enough ;-)\n\nThis has also helped me debug AtomCoords and the property system a little.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-03T11:24:47.269581Z","commit":"541","message":"I've fixed a bug that meant that multiple residues weren't being read correctly.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-03T11:14:01.612303Z","commit":"540","message":"I've now got the basic layout of the molecule loading from a PDB (with apparently correct conversion\nfrom MolStructureEditor to Molecule) - try sire test/io/water.pdb\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-02T15:52:46.825892Z","commit":"539","message":"Fixed some bugs in the reading in of basic PDBMolecules. Now have to write the conversion\nfrom PDBMolecule to Molecule...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-05-02T07:55:22.452524Z","commit":"538","message":"I've written some of the basics of the PDB reader and also sorted out version numbering of MolGroup\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-28T09:36:55.318682Z","commit":"537","message":"I'm working on the PDB reader/writer. I am trying to make it work with PDB 2.3 and PDB 3.0 format\nfiles, extracting as much information as possible so that it can be copied into the Molecule\nobject via well-defined properties.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-27T20:56:24.321191Z","commit":"536","message":"I've made a start updating the PDB reader/writer so that I can load up molecules once again.\n\nI've made the IO classes into properties so that they can be passed around within the code\n(e.g. have a PDB object passed into a Simulation so that the trajectory output format\ncan be controlled).\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-27T19:50:53.409240Z","commit":"535","message":"All of the unresolved symbols have now been placed. SireMM now all compiles and links without error :-)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-27T10:51:59.364277Z","commit":"534","message":"Filling in some of the missing symbols...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-25T20:25:18.168538Z","commit":"533","message":"I've finished writing InternalFF, and it compiles, but there are some undefined symbols in SireMM.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-25T13:03:42.166334Z","commit":"532","message":"I've now written the code for the improper, stretch-bend, bend-bend and stretch-bend-torsion forces.\n\nThe only missing code is the calculation of d theta / d r for the impropers... (half derived)\n\nNow to finish off InternalFF\n\n"},{"author":"chryswoods","date":"2008-04-25T10:10:55.641561Z","commit":"531","message":"I've written the code to calculate the bond, angle, dihedral, Urey-Bradley and stretch-stretch forces.\n\nI've deliberately written readble and generic code, as this is for the generic InternalFF forcefield,\nwhich is not expected to be the bottleneck in the simulation. If it becomes the bottleneck, then a\nspecific, speed-optimised version can be written, using the generic forcefield as a check and \nbenchmark.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-23T07:54:32.807147Z","commit":"530","message":"I've written the code in InternalPotential to calculate all of the internal energies, and have\nalso written most of the code to calculate the bond forces.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-22T07:49:45.117817Z","commit":"529","message":"I've now written InternalParameters3D, which is an object that contains both the intramolecular \nparameters and the 3D coordinates of the atoms in the molecule. I think that I now have\neverything I need to write InternalPotential now (which now just has to perform simple\nloops over the parameters in InternalParameters3D)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-21T21:12:08.259752Z","commit":"528","message":"I've now written InternalParameters, which compiles without error.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-18T21:20:24.966385Z","commit":"527","message":"I'm continuing to write InternalParameters - I've nearly finished the conversion from \nmolecule properties to InternalParameters.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-18T15:48:52.715214Z","commit":"526","message":"I'm now writing the code to convert from the internal molecule properties to the InternalParameters\nobject used by the forcefield. I've worked out how to get intra-molecular perturbations working as\nwell, that minimise the amount of calculation.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-17T16:27:54.866109Z","commit":"525","message":"I'm now working on the internal parameters - I've got to work out how to store both the \nparameters and the forces...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-17T14:25:16.846327Z","commit":"524","message":"I've now written the molecular properties that contain the 2 atom, 3 atom and 4 atom functions\n(so all of the bond, angle, dihedral, improper, Urey-Bradley, stretch-stretch, stretch-bend,\nbend-bend and stretch-bend-torsion MM parameters!). These classes now all compile. The next\nstep is writing the code in InternalParameters that fetches these parameters and converts them\ninto a format that can be understood and processed quickly by the Internal forcefield (InternalFF)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-17T11:24:41.360574Z","commit":"523","message":"I'm continuing to work on the internal functions - I've just finished writing TwoAtomFunctions,\nwhich is the molecular property that holds all two atom functions (e.g. bond potentials,\nor Urey-Bradley potentials)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-15T14:50:06.096110Z","commit":"522","message":"I'm working on the internal forcefield, which provides all of the intramolecular molecular\nmechanics terms, e.g. bond, angle, dihedral, improper and various cross-terms.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-07T15:40:07.587645Z","commit":"521","message":"All of Sire now compiles and links without error (well, all of the parts that are currently enabled).\nThis means that it is possible to do some more in depth testing.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-03T07:48:27.837753Z","commit":"520","message":"I've nearly finished adding in all of the missing QDataStream functions so that SireMM will link...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-02T19:44:58.554288Z","commit":"519","message":"I've filled in lots of missing functions (mainly QDataStream serialisation functions) and am making progress\ntowards getting SireMM to compile.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-01T21:06:42.520424Z","commit":"518","message":"I've now written Intra2B2GFF, Intra2B2G3DFF and created IntraCLJFF and IntraGroupCLJFF (so now\nhave the code to allow perturbation of parts of molecules, e.g. residues in a protein).\n\nI've culled some files - particularly as I will now move all database files so that they\nare separate to SireFF and SireMM (as I want the core runtime to not have to depend on QtSql\nas it may not be available on compute nodes). I will therefore (eventually!) write\nSireFFDB and SireMMDB libraries that will derive from SireDB and will contain the database\ncode necessary to parameterise the molecules in SireMM and SireFF.\n\nWith the code cleaned, SireFF now compiles and links, and all of SireMM compiles,\nbut there are some unresolved symbols.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-01T16:32:52.852229Z","commit":"517","message":"I've now got IntraCLJFF compiling - just now IntraGroupCLJFF to go...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-04-01T14:45:19.756280Z","commit":"516","message":"I've made a start on the intramolecular versions of the intermolecular two body forcefields, including\nwriting all of the code in CLJPotential to allow the full intramolecular CLJ energy to be calculated\nboth for a whole molecule, and for part of a molecule interacting with another part. This will\nallow me to both only calculate the change in intramolecular CLJ energy, and will allow me to\nhave an IntraGroupCLJFF that will let me separate parts of the intramolecular CLJ energy out\n(e.g. if I want to perturb part of a molecule, or switch part of it off - think alanine scanning)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-31T21:03:26.957146Z","commit":"515","message":"I've now written G2FF, Inter2B2GFF, Inter2B2G3DFF and InterGroupCLJFF, and it all compiles. The\nspeed with which I've done this shows the power of this design.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-31T19:27:40.174225Z","commit":"514","message":"Spring cleaning redundant files...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-31T07:31:51.720335Z","commit":"513","message":"Ok, InterCLJFF now compiles :-)\n\nI now finally have something chemical that I can test (perhaps I could do the now traditional water\nbox test to compare the speed with the old version?)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-30T12:45:54.708209Z","commit":"512","message":"I have written most of Inter2BFF and Inter2B3DFF and have instantiated these as InterCLJFF (which I am now\ntrying to compile). There are a few compile errors to sort out...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-26T16:48:24.839143Z","commit":"511","message":"I've made a lot of progress on the common forcefield interface, and have written all of the editing\nfunctions for FF, and am now nearly finished writing the editing functions for G1FF.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-26T08:49:31.811565Z","commit":"510","message":"I am making quite a lot of progress sorting out the functions behind the common forcefield molecule\nediting interface - all of the add() and addIfUnique() functions have now been written in SireFF::FF.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-24T15:27:23.746246Z","commit":"509","message":"I've written FFMolGroup and FFMolGroupPvt - this is now quite a way towards sorting out the \nunderlying code for adding, removing and editing molecules in *all* forcefields (as it is\nnow all abstracted into a common location!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-24T10:28:15.511859Z","commit":"508","message":"I've filled in the force functions of CLJPotential so that the coulomb and LJ forces can be \nevaluated separately.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-23T16:28:05.989075Z","commit":"507","message":"I've written the ForceTable class and worked out how the forces will be evaluated in the code\n(I've decided against taking advantage of equal-and-opposite forces and will take the hit\nof calculating force i,j and force j,i separately, as this gives better cache performance,\nsimplifies the code and makes it easier to do things like have only partial molecule forces\nevaluated - by having only parts of molecules in the forcetable).\n\nForceTable is now written and compiles without error.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-21T17:23:40.265590Z","commit":"506","message":"I've now written SireFF:FF, the base class of all forcefields, and it compiles without error.\n\nI've also moved MoleculeInfoBase over to using QUuid, and I will move everything that really\nrequires a unique ID over QUuid as well. This is because I really do need to ensure a \nunique UID across multiple machines, as well as time (as I can be loading and saving\nfiles over time, and also passing data between nodes in a cluster). It is important that\nonce an objects has got a UID, that it keeps it!.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-21T14:45:10.389270Z","commit":"505","message":"I've had to fix some of SireMol and SireBase to make sure that they can compile without error.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-21T12:12:20.260978Z","commit":"504","message":"I've cleared out some of the SireMM files that are no longer necessary.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-21T12:06:20.754898Z","commit":"503","message":"I think that I've finished CLJPotential now (at least written all of the code and it all compiles\nwithout error). I am nearly at the point when it can be tested...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-21T09:19:46.338888Z","commit":"502","message":"I've now got the code to parameterise the IntraCLJPotential working. All of the functions of both\nInterCLJPotential and IntraCLJPotential for energy and force evaluation, and to get all of the\nparameters are now compiling correctly without warning.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-20T17:45:55.174906Z","commit":"501","message":"I've now written the code that extracts the CLJ and coordinate properties from a molecule\n(or group of molecules) for use with a CLJPotential. This all compiles.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-20T11:45:21.966526Z","commit":"500","message":"I've got CLJPotential to fully compile now (with complete instantiation of the ancillary classes).\n\nThis is commit 500 (which is about commit 1350 in total!). Sire is so big...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-18T16:50:16.444366Z","commit":"499","message":"I'm continuing to work on getting CLJPotential to compile. I am now at the point of sorting out\nthe code that is used to parameterise the CLJ molecules...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-18T08:48:36.608513Z","commit":"498","message":"I'm now getting a lot of CLJPotential to compile (indeed all of IntraCLJPotential - now working\non IntraCLJPotential)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-16T15:09:39.076208Z","commit":"497","message":"I've finished the DistVector class and added functions to the volume classes that use DistVector\nto help build the vector field of distances between points in CoordGroups. This is useful\nfor the force evaluation.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-14T18:14:28.541879Z","commit":"496","message":"I'm now getting CLJPotential to compile, and am adding in some necessary extra classes\n(e.g. LJParameterDB to hold all of the LJParameters, and DistVector, that is used in\nthe force calculations)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-13T12:43:51.651353Z","commit":"495","message":"I've renamed CLJFunctional to CLJPotential\n\n"},{"author":"chryswoods","date":"2008-03-13T12:06:30.542062Z","commit":"494","message":"I've just about finished all of the ancillary classes needed by the Inter- and Intra- CLJPotentials.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-11T13:26:30.504547Z","commit":"493","message":"I'm now cleaning up the code behind the AtomicParameters and AtomicCoords3D. This is to help me\nclean up the design of the forcefields, as I am getting stuck in the mess (mud!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-11T11:57:06.420293Z","commit":"492","message":"I've written the basic components classes.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-11T10:20:11.966522Z","commit":"491","message":"I'm sorting out the forcefield components at the moment...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-03T15:47:59.685089Z","commit":"490","message":"I'm continuing to write the CLJFunctional class (though I will rename it CLJPotential, and\nam also now splitting it into InterCLJPotential and IntraCLJPotential, which are for\nintermolecular and intramolecular energies/forces respectively)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-03T08:50:17.050923Z","commit":"489","message":"I'm now starting to use the FFMolecule type classes to build the CLJPotential.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-01T15:59:37.563499Z","commit":"488","message":"I've now written the FFMolecule3D, FFMolecules3D and FFParameters3D classes, which all\ncompile without error.\n\nI now have the framework in place to start building the Potential classes, as these will\nnow use the new template molecule classes to store all of the required information\nand do all of the difference calculation required for Monte Carlo.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-03-01T12:14:28.108675Z","commit":"487","message":"I've written FFMolecules (and its associated classes, FFMolecule, ChangedMolecule) and it\ncompiles without error. I now have to write FFMolecules3D and FFMolecule3D.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-29T08:55:24.872862Z","commit":"486","message":"I am making progress with the FFMolecules type classes. I've realised that these should\nbe attached to potentials rather than forcefields, (e.g. FFMolecule\u003cCLJPotential\u003e) as\nthen all forcefields using the same potential use the same molecule classes, and also\nthis allows forcefields that use multiple potentials (e.g. combined LJ and Gay-Berne)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-28T08:50:16.628032Z","commit":"485","message":"I am making progress filling in the FFMolecule specialised forcefield molecule classes.\n\nEventually these will form a generic collection of classes that will provide all of \nthe specialised forcefield molecules for all of the forcefields automatically\n\n(so no more CLJFF::Molecule, CLJFF::ChangedMolecule, LJFF::Molecule, LJFF::ChangedMolecule\ncode duplication!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-27T18:37:58.254682Z","commit":"484","message":"I'm back working on the generic forcefield design, creating the classes that will\nholds the forcefield optimised molecule data.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-27T15:44:17.678120Z","commit":"483","message":"I've integrated PackedArray2D into AtomProperty and have got everything to compile.\n\nEverything up to SireMol compiles and links.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-27T12:16:28.876394Z","commit":"482","message":"I've finished the PackedArray2D classes, and they now all compile and some simple tests\nshow that they are working.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-27T09:18:44.869993Z","commit":"481","message":"I've finished renaming PackedArray to PackedArray2D\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-27T09:08:29.608550Z","commit":"480","message":"I've nearly finished the PackedArray classes - which I am now renaming PackedArray2D (to mirror\nthe Array2D class)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-26T22:54:00.595594Z","commit":"479","message":"I've made a lot of progress filling in the code for PackedArray (and its worker classes).\nI also think that I've fixed a bug in the extract() functions of CoordGroupArray and\nCoordGroup.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-26T08:51:19.045403Z","commit":"478","message":"I'm filling in the code for PackedArray (and all of its ancillary classes)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-25T21:40:07.993210Z","commit":"477","message":"I am now generalising the CLJPotential design so that I can just drop in other potentials\n(without having to duplicate too much CLJPotential code). To do this, I am having to \ncreate a generic TwoBodyMolecule class, which itself requires that I sort out the \nPackedArray class (essentially a generic container\u003cT\u003e that holds an array of arrays\nin a packed format similar to CoordGroupArray)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-24T17:30:39.272553Z","commit":"476","message":"I've been learning about molecular dynamics force shifting methods, and have now written \nthe code to calculate both inter- and intra- molecular CLJ energies and forces :-)\n\nNow that it's written, I now know what information I need to push into these functions,\nthereby helping me flesh out the rest of the forcefield design.\n\nCode is broken\n\n"}]}