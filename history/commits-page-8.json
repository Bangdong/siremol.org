{"Page":8,"TotalPages":28,"commits":[{"author":"chryswoods@gmail.com","date":"2013-08-23T13:17:27.594022Z","commit":"2075","message":"I've updated the install_sire.sh script so that sire.run unpacks to tmp_sire.app\nrather than sire.app (as I annoyingly wiped my sire.app installation during testing!)\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-23T10:31:33.017471Z","commit":"2074","message":"Setting up the move from python2/branches/devel to python/branches/devel...\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-23T10:24:25.207808Z","commit":"2073","message":"I've added code to the python executable that allows it to automatically run a script\nbased only on the name of the symbolic link, e.g. linking \"python\" to \"package_sire\" \nwill cause it to run the \"package_sire.py\" script in share/scripts :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-23T10:01:50.364995Z","commit":"2072","message":"I've cleaned up the Sire installation script and have removed version numbers\nfrom the sire executables\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-22T17:00:36.122287Z","commit":"2071","message":"I've added the python script that is used to create a sire.run self-extracting\ninstaller from any sire.app directory :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-22T16:57:34.296941Z","commit":"2070","message":"I've added in some scripts to help automate and check the installation of Sire, and for\ncreating portable binaries. My windows desktop arrived today, so I can start to build\na ton of VMs to test this all on different systems :-)\n\nSo far, this is all working on Mac and teh linuxes I have available (e.g.\ngrendel, curie and bluecrystalp2)\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-22T11:18:57.754856Z","commit":"2069","message":"I've added a simple script to get the C and C++ library versions needed\nby the Sire and bundled libraries. This will help me when building and \ndistributing portable binaries...\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-22T10:56:20.501049Z","commit":"2068","message":"Forgot to actually add the QDir and QFileInfo files...!\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-22T10:55:11.279328Z","commit":"2067","message":"Updated python install script to install pip and setuptools, and have also added QFileInfo to\nthe set of wrapped Qt classes\n\n"},{"author":"chryswoods","date":"2013-08-22T09:13:19.634851Z","commit":"2066","message":"I've fixed a bug in the code that is used to find the install directory of Sire on linux\n\n"},{"author":"chryswoods","date":"2013-08-21T16:36:55.242734Z","commit":"2065","message":"I've updated the python install file so that it sets the correct RPATH on linux (pointing to $ORIGIN/../lib)\n\n"},{"author":"chryswoods","date":"2013-08-21T14:21:49.929975Z","commit":"2064","message":"I've added a more informative error message if sire.app is not supplied to the \npython wrapper's cmake command\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-21T14:05:36.517582Z","commit":"2063","message":"I've fixed the wrapping of QDate and have added some convenience code to the python main\n(sets number of threads, automatically starts ipython if available)\n\n"},{"author":"chryswoods","date":"2013-08-21T13:22:50.641076Z","commit":"2062","message":"I've fixed compile and link errors on Linux and now the corelib successfully compiles, installs\nand runs on Linux. The resulting sire.app directory is fully self-contained and relocateable\n(i.e. you can move it to wherever you want and sire will still find its own library paths\nand install path etc.). I think, if I compile against an old enough libstdc++ and libc, \nthat the resulting binary should be pretty portable across different linuxes.\n\nCode is still experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-19T16:55:09.420747Z","commit":"2061","message":"I've fixed a streaming bug on mac. This only affected the Qt5 version of Sire, and \nwas caused by me forgetting to specify the Qt datastream format version when writing\nthe datastream file header.\n\nCode appears to be working well on mac, but fails to compile on linux\n\n"},{"author":"chryswoods","date":"2013-08-19T16:43:32.806322Z","commit":"2060","message":"Fixes to enable compilation of Sire plus dependencies on linux. All of the dependencies\nnow compile, but I need to fix compile errors for corelib...\n\nCode is broken on Linux\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-19T10:56:17.584448Z","commit":"2059","message":"Updating the python modules with fixes for python 3 and fixing the change of name from\nSoiree to SireAnalysis\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-19T10:17:57.821830Z","commit":"2058","message":"I've fixed a reference counting bug in the shared pointer classes in the updated Sire.\nThis only affects the Qt5 version of Sire, and caused obvious crashes ;-)\n\nThe Qt5 / python 3 / c++ 11 version of Sire is now becoming more stable, but should\nstill be considered experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-16T10:29:59.107266Z","commit":"2057","message":"I've added in support for letting the streaming system know that a class name has been\nchanged. This was added so that my old s3 files that used Soiree classes could be \nloaded, now that Soiree has been renamed to SireAnalysis\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-16T10:28:42.214478Z","commit":"2056","message":"I've made a small change so that the streaming functions know that Soiree has been \nrenamed to SireAnalysis\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-15T16:52:40.502921Z","commit":"2055","message":"I'm starting to test the python 3 wrappers. So far I get crashes when I load molecules\nbecause of a strange dynamic_cast bug in Property.\n\nI am having to port the test scripts - fortunately python comes with 2to3 which\ndoes all of the hard work. Just run sire.app/bundled/bin/2to3 -w script.py to \nport the script.\n\nCode is experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-15T16:50:34.022808Z","commit":"2054","message":"The python wrappers now load correctly into the python 3 interpreter and some of\nmy tests work. However, there are crashes when trying to load molecules due\nto a strange dynamic_cast bug in Property...\n\nI've also added setuptools and pip to the bundled modules so that additional\npython modules can be installed using these tools (and I don't need to bundle\nthem here!)\n\nCode is still experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-15T14:31:54.846185Z","commit":"2053","message":"I've renamed Soiree to SireAnalysis. This is a slightly less confusing name... ;-)\n\nThis version should be considered highly experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-15T14:25:49.979175Z","commit":"2052","message":"Most of the python wrappers are now working :-). I've just got to sort out some import\nproblems for QDate, QTime and QDateTime\n\nThere are a lot of changes. I've renamed Soiree as SireAnalysis, have renamed\nsire_python to python, and have remove sire_ipython. I have also changed\nevery \"Python2\" reference to \"Python\", e.g. libSirePython2 is now libSirePython.\nI have also updated the manual wrappers to use the Python3 API, so these are now\ndefinitely python 3 only wrappers.\n\nCode should be considered as highly experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-15T11:27:37.061988Z","commit":"2051","message":"All of the python wrappers and their dependencies now compile and install correctly in sire.app.\nThe python3 interpreter runs, but cannot run any scripts and cannot import any modules...\n\nCode is broken\n \n"},{"author":"chryswoods@gmail.com","date":"2013-08-15T11:26:35.787807Z","commit":"2050","message":"Added options needed by the python wrappers\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-14T17:00:41.503192Z","commit":"2049","message":"Some fixes to help the compilation of the python wrappers\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-14T16:59:08.419692Z","commit":"2048","message":"I've added in a bundled python3 and boost_python (including writing my own CMakeLists.txt for\nthe bundled boost::python). I'm in the process of updating everything to work against python3,\nso treat this all as broken\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-14T13:46:15.322911Z","commit":"2047","message":"Bundling of all dependencies of corelib is now working on OS X, creating a single, \nrelocatable directory. I've added in the dependencies to the tree so that all developers\nwill being working from the same version\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-13T16:55:21.007323Z","commit":"2046","message":"Made progress compiling the python wrappers with Qt5 and C++ 2011. Nearly all compile\nnow, with just some link errors at the end.\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-13T16:54:22.687192Z","commit":"2045","message":"Making progress bundling more libraries, and have also made some fixes that reduce\nerrors when compiling the python wrappers.\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-13T10:23:54.684377Z","commit":"2044","message":"I've ported Sire over to Qt 5.1, have fixed the code so that it compiles using C++ 2011, and \nhave modified the CMake files so that they use the latest cmake and support compiling and linking\nagainst libc++ rather than libstdc++. The code all compiles and appears to work (porting to \nQt5 was surprisingly easy). I now need to port all of the python code...\n\nCode should be considered as highly experimental and not used for production work\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-12T09:41:51.079251Z","commit":"2043","message":"I've updated sire_python so that it can work out the correct PYTHONPATH at runtime.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-12T09:41:25.278441Z","commit":"2042","message":"I've added in some functions in SireBase to get the full path to the current Sire install\ndirectory at runtime and to get the paths to the directories containing the libraries,\nbundled libraries etc.\n\n"},{"author":"nividic73@googlemail.com","date":"2013-08-12T09:15:13.158334Z","commit":"2041","message":"I fixed a little bug"},{"author":"chryswoods@gmail.com","date":"2013-08-09T11:54:34.485263Z","commit":"2040","message":"Fixed setting the rpath on mac for libtbb and libtbbmalloc\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-09T11:54:16.439372Z","commit":"2039","message":"Fixed a bug in the path to the bundled libraries for sire_python\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-09T11:32:59.198524Z","commit":"2038","message":"I've finally(!) got rpath working on mac. The trick is to realise that each library on the \nmac must be named \"@rpath/library\", and then each executable has to have @executable_path/../library_path\nadded to the list of rpaths. CMake doesn't seem to do this yet on a mac, so I have added it\nas a post-build command for each executable.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-09T11:30:33.477109Z","commit":"2037","message":"Python wrappers for the next commit\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-08T14:43:15.899620Z","commit":"2036","message":"I've got cmake to compile and install the bundled tbb\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-08T11:41:54.291006Z","commit":"2035","message":"I've updated the cmake files so that all of the Sire libraries and modules are now installed\ninto a single, relocatable directory. By default this is $HOME/sire.app. This is the first stage\nto making a portable binary of Sire, and allows a user to run sire.app/bin/sire_python without\nneeding to set any environmental variables (e.g. LD_LIBRARY_PATH or PYTHONPATH). I will eventually\nchange the layout in this directory to match the OS X application bundle guidelines, but am now\nworking on having sire.app include bundles of its dependencies (thus allowing sire to be compiled\nwithout the user having to download or compile anything beforehand, and also allowing the sire.app\ndirectory to be copied from one user to another with the minimum of breakage).\n\nCode is all working, but consider this version highly experimental\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-08T11:38:46.210203Z","commit":"2034","message":"Python wrappers for the next commit\n\n"},{"author":"nividic73@googlemail.com","date":"2013-08-08T08:51:33.975971Z","commit":"2033","message":"The solvent-solvent interactions have been set off during the evaluation of the gradient in the TI method to reduce numerical instabilities"},{"author":"chryswoods@gmail.com","date":"2013-08-07T16:58:03.173389Z","commit":"2032","message":"Cleaning up the files in the devel branch...\n"},{"author":"chryswoods@gmail.com","date":"2013-08-07T16:26:27.277544Z","commit":"2031","message":"I've rewritten the addToGrid function in GridFF2 and it works, giving comparable answers\nto GridFF when tested using testnewgridff.py. The code is between 4-10 times faster :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-07T16:25:31.989841Z","commit":"2030","message":"Python wrappers for the next commit\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-07T11:03:03.717022Z","commit":"2029","message":"I'm beginning to rewrite the GridFF2 forcefield. Using MultiFloat looks like it will give\nover an order of magnitude speed-up :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-07T09:51:47.801525Z","commit":"2028","message":"I've duplicated GridFF to GridFF2 so that I can rewrite the underlying code using MultiFloat/MultiDouble\n(thus speeding it all up significantly, hopefully ;-)). I've added a new test, testnewgridff.py\nthat compares GridFF and GridFF2. At the moment, this test passes as both GridFFs are identical...\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-07T09:50:49.880981Z","commit":"2027","message":"Python wrappers for the next commit...\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-06T09:41:22.557606Z","commit":"2026","message":"I've fixed a bug caused by missing Soiree containers and have added the ability to \nsave restart files and pdbs only every N iterations\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T14:16:51.952347Z","commit":"2025","message":"Removed a compiler warning when compiling ti.cpp. Code now compiles on bluecrystal2 using an older gcc\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T14:13:45.193907Z","commit":"2024","message":"Fixing some compile bugs in multidouble.h...\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T14:11:44.259759Z","commit":"2023","message":"Updated multidouble/multifloat to improve portability of the code\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T11:09:52.888667Z","commit":"2022","message":"I've finished coding up the Bennetts code. Now it all needs testing...\n\nCode compiles, runs, but the new free energy code needs to be tested\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T11:09:10.748739Z","commit":"2021","message":"Python wrappers for the next commit\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T10:21:55.910994Z","commit":"2020","message":"Fixed the naming of the Bennetts files...\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-05T10:21:08.862466Z","commit":"2019","message":"Work in progress - have finished the FEP classes, have finished the BennettsFreeEnergyAverage and\nam now working on the Bennetts processing classes... Need to commit as made a mistake \nwith Bennetts name (dropped the last 't'!)\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-01T14:11:18.440845Z","commit":"2018","message":"I've finished writing the FEP code. Now to write the Bennet's code...\n\nCode is working\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-01T14:10:57.205681Z","commit":"2017","message":"I've updated WSRC to calculate free energies using FEP in addition to FDTI\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-01T11:39:29.306209Z","commit":"2016","message":"I'm adding in the code to calculate FEP (and then Bennet's) free energies. Work in progress\nwhile I go to lunch...\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2013-08-01T11:38:48.971076Z","commit":"2015","message":"Python wrappers for the next commit\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-29T14:14:04.466001Z","commit":"2014","message":"Added ability to store and return to Sire accumulated average total energies computed during an OpenMM calculation. \nThis will be useful to compute enthalpy changes. \n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-28T18:27:18.768095Z","commit":"2013","message":"Added mixed precision OpenCL mode by default in openmmmdintegrator as this appears to be the only way to use the platform with the Intel OpenCL SDK\n\nAlso changed the free energy code to set constraints between bonds that are in a perturbed solute, if the ff parameters do not change. \n\nThe constraint code probably needs to be revised. It should be possible to constrain perturbed bonds to their target equilibrium value and get \nreasonabe free energies without having to use a small timestep.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-26T15:38:25.388829Z","commit":"2012","message":"I've made some optimisations to help speed up Amber().readCrdTop (in response to the speed bug).\nThese have sped things up a little, but not as much as would be needed\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-26T15:27:33.065866Z","commit":"2011","message":"Debugging free energy code to support multiple molecule perturbations. Code is broken.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-26T09:43:12.402196Z","commit":"2010","message":"I've made the WSRC script save the old freenrgs.s3 file to a backup before writing the \nnew file. This will prevent data loss if the job is killed during the write.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-26T09:26:01.535517Z","commit":"2009","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-26T09:25:42.754331Z","commit":"2008","message":"I've added in a taylor series expansion estimate of the free energy. This provides\nanother estimate of the convergence of the calculation and associated error,\nbut seems to become equal to the exponential value very quickly (within an iteration\nor so)\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-25T14:09:53.171535Z","commit":"2007","message":"I am modifying the openmm free energy code so that perturbations on multiple molecules are supported\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-25T11:00:25.497072Z","commit":"2006","message":"I've added in the PMF class and have added the code for integrating the gradients using\ntrapezium rule and interpolation, together with adding in minimum and maximum errors.\n\nI've also extended the Sire.Tools.Plot code (in the last commit) so that it can plot\ndatapoints, histograms and curves more easily and prettily\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-25T10:59:09.916285Z","commit":"2005","message":"Python wrappers for the next commit \n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-23T15:01:01.549254Z","commit":"2004","message":"I've added additional functionality to histogram (calculating standard error, and error to\na given confidence level) and have also added a DataPoint class that lets me hold x,y values\nwith associated errors. This will be used for the next step, which is to integrate the\ngradients to obtain a PMF. I will attempt to do this both using trapezium integration\nand using the curve fitting code supplied by Julien\n\nCode is working\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-23T14:59:16.053654Z","commit":"2003","message":"Python wrappers for the next commit. I've also added a simple plotting module that\nuses matplotlib to draw some graphs for histograms and free energy gradients.\nThis uses the new DataPoint and updated Histogram code that is in the next\ncorelib commit\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-22T16:42:44.948785Z","commit":"2002","message":"I've added a \"Gradients\" class that holds the gradients for a TI simulation. The accumulators\nhave been given addition operators so that it is easy to average together the averages...\n\nCode is working\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-22T16:41:36.217803Z","commit":"2001","message":"Python wrappers for the next commit\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-22T15:36:40.270037Z","commit":"2000","message":"commit of the updated python wrappers\n"},{"author":"julienmich@googlemail.com","date":"2013-07-22T15:34:51.581882Z","commit":"1999","message":"Added back support to buffer coordinates in openmm free energy integrator code. Changed slightly the interface.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-22T14:12:27.725059Z","commit":"1998","message":"I've fixed some bugs in Histogram, and have added the ability to calculate skew and kirtosis.\n\nI've updated FreeEnergyAverage so that it collects a histogram of data during the simulation.\n\nI've written the start of TI that collects FreeEnergyAverages for each lambda value for each\niteration, so that we can then run some statistical analysis on it all.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-22T14:06:08.169428Z","commit":"1997","message":"Python wrappers for next commit...\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-19T16:20:49.268049Z","commit":"1996","message":"I'm in the process of adding in support for calculating PMFs and performing real-time statistical\nanalysis of a running simulation. As part of this, I've rewritten the Histogram class to provide\nmore statistical data. This has obsoleted the old design, which broke the RDFMonitor, RDF and\nWHAM classes. I have removed these classes as they were little-used. If anyone is using them,\nplease get in touch and I will rewrite them to use the new Histogram code.\n\nI've also added a copy of the calcpmf.py script that shows the kind of run-time analysis\nto which I aspire...!\n\n"},{"author":"chryswoods@gmail.com","date":"2013-07-19T16:16:32.526468Z","commit":"1995","message":"Here are the python wrapper updates for the next commit...\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-19T13:10:02.551058Z","commit":"1994","message":"Commit of a few missing wrappers\n"},{"author":"julienmich@googlemail.com","date":"2013-07-12T14:00:34.408873Z","commit":"1993","message":"I have recompiled the python wrappers using the new python script. \n\nMy code now compiles and runs the OpenMMfree energy scripts without crashing :-) \n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-12T13:59:34.853291Z","commit":"1992","message":"Added back files from my old dev branch in julienmich's branch\n"},{"author":"chryswoods@gmail.com","date":"2013-07-12T13:02:07.924231Z","commit":"1991","message":"Here is the updated create_wrappers.py script copied from Gaetano's branch\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-12T12:57:00.606439Z","commit":"1990","message":"Adding\n"},{"author":"julienmich@googlemail.com","date":"2013-07-12T12:53:33.877192Z","commit":"1989","message":"deleting before adding again \n"},{"author":"julienmich@googlemail.com","date":"2013-07-12T12:53:19.594176Z","commit":"1988"},{"author":"julienmich@googlemail.com","date":"2013-07-12T12:50:08.684443Z","commit":"1987","message":"Will this commit ever work ??\n\n"},{"author":"julienmich@googlemail.com","date":"2013-07-11T10:00:30.598825Z","commit":"1986","message":"svn merge -r 1849:1978 http://sire.googlecode.com/svn/corelib/branches/users/nividic .\n\nalso resolved 13 conflicts\n\n"},{"author":"chryswoods@gmail.com","date":"2013-06-27T13:41:45.345875Z","commit":"1985","message":"I've fixed a lot of performance problems with MultiFloat and MultiDouble that were revealed\nwhen I updated the speedtest to do some realistic calculation (coulomb energy between two\ngroups of atoms). I've inlined most things and have also added SP/DP sums for the floating\npoint summation (which gives almost exactly the same result as for DP/DP).\n\nThe speed results are in speedtest_results, and show that the AVX floating point code\nis going as fast as the hardware will allow (13.8-13.9 GFLOPs per core, which is almost\nexactly the theoretical peak of 14.4 GFLOPs per core...! 95% efficient).\n\nThe speedtest also shows that all versions (vanilla, SSE and AVX, for float and double)\ngive the same energy, which is reassuring.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-06-26T15:43:04.073014Z","commit":"1984","message":"I've added code to convert between MultiFloat and MultiDouble, have added more tests for the classes\nand have also added a speed test executable (together with results for my Macbook Air in the same\ndirectory - my Air can get over 3 GFLOPs per core of single precision addition plus sqrt when using AVX\n(so 6 GFLOPs for the machine, when the theoretical peak is 28.8 GFLOPs...). I still have some way\nto go to speed things up, but it is not bad :-)\n \n"},{"author":"chryswoods@gmail.com","date":"2013-06-26T15:39:52.870143Z","commit":"1983","message":"Python wrappers for the next commit of corelib\n\n"},{"author":"chryswoods@gmail.com","date":"2013-06-26T11:44:11.028002Z","commit":"1982","message":"I've added a MultiDouble class that provides a double vector with the same\nnumber of elements as MultiFloat\n\n"},{"author":"chryswoods@gmail.com","date":"2013-06-26T11:43:34.454646Z","commit":"1981","message":"Additional python wrappers for the MultiDouble class to be committed in the next commit of corelib\n\n"},{"author":"chryswoods@gmail.com","date":"2013-06-26T10:35:23.040985Z","commit":"1980","message":"Added in a MultiFixed vector, that provides a vector of 64bit fixed point numbers (32bits each for\neither side of the decimal point) for fixed point arithmetic. MultiFixed is dimensioned to have\nan identical vector size as MultiFloat.\n\n"},{"author":"chryswoods@gmail.com","date":"2013-06-26T10:34:18.124669Z","commit":"1979","message":"Python wrappers for the next corelib commit, plus added the option to WSRC.py to \nchoose the swap water cluster from only the free water box\n\n"},{"author":"nividic73@googlemail.com","date":"2013-06-25T09:39:02.525352Z","commit":"1978","message":"python wrapper update"},{"author":"nividic73@googlemail.com","date":"2013-06-24T14:10:57.665270Z","commit":"1977","message":"single topology update"},{"author":"chryswoods@gmail.com","date":"2013-06-24T14:10:20.899945Z","commit":"1976","message":"Added python wrapping for the \"isAligned\" function. Note that this wrapper doesn't\nsupport alignment yet, so creating or calling MultiFloat functions can often result\nin an exception being raised.\n\n"}]}