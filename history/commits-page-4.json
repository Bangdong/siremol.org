{"Page":4,"TotalPages":28,"commits":[{"author":"chryswoods@gmail.com","date":"2014-03-21T18:29:15.528405Z","commit":"2475","message":"Updated wrappers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T18:21:35.464437Z","commit":"2474","message":"Fix to generation of mover wrappers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T17:55:34.679402Z","commit":"2473","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T17:51:45.164319Z","commit":"2472","message":"Updated the API of Mover and added some alignment utility functions\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T17:24:55.638367Z","commit":"2471","message":"Committing additional python-wrapped containers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T17:24:34.490767Z","commit":"2470","message":"Got the alignment code working. Now integrating with Mover so that I can have\n\nmol = mol.move().align(other).commit()\n\n:-)\n\nCode is untested...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T15:51:59.485526Z","commit":"2469","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T15:44:41.725030Z","commit":"2468","message":"I've updated the Matrix API to support the needs of \"align\"\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T14:23:19.458523Z","commit":"2467","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-21T14:21:10.179651Z","commit":"2466","message":"Working on the alignment code needed to align the two ligands for ligandswap\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-20T17:19:02.081079Z","commit":"2465","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-20T17:14:28.694259Z","commit":"2464","message":"Allowing automatic conversion from boost::tuple to AtomIDMatcher...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-20T17:01:34.989298Z","commit":"2463","message":"Merging the MCS code with AtomMatcher, as this seems like the logical place for it to exist\n(especially as AtomMatcher is used for alignment). Also updated the API of AtomMatcher\nand added in AtomIDMatcher for limited ID matching and AtomMultiMatcher so that AtomMatches\ncan be combined together\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-20T12:02:12.704957Z","commit":"2462","message":"svn commit test\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-20T12:00:37.663259Z","commit":"2461","message":"Committing my progress on ligandswap. Code is still in development...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-20T12:00:30.215517Z","commit":"2460","message":"I'm in the process of adding in a function to find the maximum common substructure\nusing boost::graph. The code is working but I need to add some of the boost\nheader files that are missing from boost::graph to the bundled boost directory,\nso this will not yet compile elsewhere.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-18T12:13:33.823791Z","commit":"2459","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-18T11:59:27.822339Z","commit":"2458","message":"A lot of changes so that Class::update(molecule) or Class::update(molecules) changes to\nClass::update(molecule, bool auto_update=true) and Class::update(molecules, bool auto_update=true).\n\nThis will ensure that the default behaviour of the old code (no partially-updated groups\nand forcefields) is preserved for older code that is unaware of the time-savings \n(and danger) of partial updates. Now, the user will have to explicitly ask for partial\nupdating, and so should be aware of the limitations.\n\nAll compiles but need to generate python wrappers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-17T16:06:53.975008Z","commit":"2457","message":"Making progress writing the ligandswap code...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-17T12:17:43.423114Z","commit":"2456","message":"I'm beginning work on the ligandswap script. The ligandswap script is still work in progress...\n\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-17T11:10:46.302256Z","commit":"2455","message":"Test Xcode commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-17T10:50:41.632170Z","commit":"2454","message":"Fixed a compile bug and some compile warnings when using LLVM 5.1 from Xcode 5.1\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-17T10:49:40.565232Z","commit":"2453","message":"Fixed a compile bug and some compile warnings when using LLVM 5.1 with Xcode 5.1\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-14T18:47:27.393858Z","commit":"2452","message":"Code has been fixed and tested. The changes increase the speed on my macbook air\nto a smidge under 4000 moves per second :-). The new code is now cleanly twice\nas fast as the old\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-14T18:23:26.275401Z","commit":"2451","message":"Added in a workspace class for MoleculeGroup so that molecule updates can be cached,\npreventing needless allocation/deallocation during MC moves. Code is now compiling\nand is untested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-14T11:17:12.770277Z","commit":"2450","message":"I've got the memory pool for the CLJWorkspace working so that now CLJWorkspaces are not\ncreated or destroyed during MC moves. The solution uses thread-local storage to provide\na per-thread pool of CLJWorkspaceData objects that are pushed and pulled from a stack\nas needed. With this, I am now running at over 3000 MC moves per second :-). I think\nthat a similar solution for MoleculeGroup will further speed up the move delta code.\n\n"},{"author":"nividic73","date":"2014-03-14T00:15:43.122782Z","commit":"2449","message":"test2"},{"author":"nividic73","date":"2014-03-14T00:15:08.579016Z","commit":"2448","message":"test"},{"author":"chryswoods@gmail.com","date":"2014-03-13T17:40:35.347103Z","commit":"2447","message":"I've got the OpenMMMD.py tools working and have created the 'sommmd' executable\nto run simple MD\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-12T17:37:48.357455Z","commit":"2446","message":"Committing the beginning of our work to create the OpenMMMD.py helper library\nin time for sommmd\n\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-12T17:36:40.661154Z","commit":"2445","message":"Fixed the bug so that the free energy code now works with OpenMM 6 on OpenCL :-)\n\nThe problem was that the OpenCL driver did not set the dimensions of the periodic\nbox correctly as we needed to (a) set the default box dimensions in openmm_system\nand (b) need to set the box dimensions and call \"reinitialize()\" before we set\nthe atom coordinates.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T16:17:20.276622Z","commit":"2444","message":"Updated DCDFile to stop writing a PDB and also changed the test to use the CPU platform\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T14:42:56.017111Z","commit":"2443","message":"Cleaning up the code and matching to the devel branch\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T14:34:43.883209Z","commit":"2442","message":"Fixed bugs caused by misordering of molecules when writing the DCD file\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T14:13:56.851128Z","commit":"2441","message":"Moved the DCD writing code into its own module\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T11:46:40.790539Z","commit":"2440","message":"Here is the first OpenMM unit test to show that the Sire and OpenMM energies are equal.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T11:35:59.323364Z","commit":"2439","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T11:32:25.559890Z","commit":"2438","message":"Updated the openmm api so that we can get the energy of the context\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T10:48:39.011249Z","commit":"2437","message":"Updated create_wrappers.py so that it knows how to create the openmm wrappers and have wrapped\nup the new api for OpenMMMDIntegrator\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T10:47:21.364783Z","commit":"2436","message":"Updated the python wrappers for Amber and have created space for some OpenMM unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-11T10:44:46.945924Z","commit":"2435","message":"Merged back the devel Amber class and have added the ability to extract the total\npotential energy from OpenMMMDIntegrator\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T17:20:59.965727Z","commit":"2434","message":"Removed the, now unused, Siren library\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T16:35:08.920783Z","commit":"2433","message":"Regenerated OpenMM wrappers with openmm on the generating machine. Saved the wrappers when openmm is not\navailable into NoOpenMM\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T16:08:15.153120Z","commit":"2432","message":"Made sure that the wrappers include OpenMM\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T15:29:44.840399Z","commit":"2431","message":"Added the missing TitrationMove and Titrator classes to CMakeLists.txt\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T15:23:27.550889Z","commit":"2430","message":"Restored OpenMMIntegrator...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T15:19:30.286521Z","commit":"2429","message":"Adding back in the OpenMM source and header files in SireMove\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T14:44:37.974961Z","commit":"2428","message":"Fixing some errors when compiling the python wrappers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T14:30:17.548968Z","commit":"2427","message":"Fixed the python wrapper for EnergyTable\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T14:09:57.809828Z","commit":"2426","message":"Committing the updated python wrappers in Gaetano's branch\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T14:03:02.030826Z","commit":"2425","message":"Added in OpenMM to CMakeLists.txt and restored the tests directory\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T13:29:36.597438Z","commit":"2424","message":"Merged everything from the devel branch up to revision 2390 into Gaetano's branch. Still\nhave to check everything, but this appears to compile.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-10T13:20:18.828186Z","commit":"2423","message":"Created space for Gaetano's python 3 wrappers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T18:19:03.339025Z","commit":"2422","message":"Fixed a python wrapper compile bug. Everything compiles, links, runs and \nall the unit tests pass\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T18:17:24.555574Z","commit":"2421","message":"Updated and fixed unit tests\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T18:10:53.540507Z","commit":"2420","message":"Python wrappers for hte last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T18:01:30.239878Z","commit":"2419","message":"Added in MolResID classes and added the code to allow InterFF to support multi-residue\nmolecules and to optimise adding and changing molecules.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T12:45:31.326567Z","commit":"2418","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T12:34:41.169920Z","commit":"2417","message":"Fixed a compile bug...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T12:32:13.658333Z","commit":"2416","message":"Debugging the use of a workspace in InterFF. Also added a function \"needsAccepting\" that\ncomplements \"accept\" and allows a check of whether or not things needs accepting\nbefore copying and accepting them\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T11:05:29.884238Z","commit":"2415","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-07T10:54:08.097903Z","commit":"2414","message":"Added an \"accept\" function that can be used to tell the system / moleculegroup / forcefield\nthat the last MC move has been accepted. This will support the use of workspaces that will\nprevent excessive copying of the system when performing small moves.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T18:09:52.945427Z","commit":"2413","message":"Fixed wrappers for CLJWorkspace\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T18:05:31.090408Z","commit":"2412","message":"Updates to allow the python wrappers to be correctly generated\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T17:52:30.116431Z","commit":"2411","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T17:48:19.117018Z","commit":"2410","message":"Added in a CLJWorkspace to hold information about a change in atoms during a move\n(so minimising memory copies etc.). Integrated this with InterFF. All needs to be\npython wrapped and tested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T14:40:05.686182Z","commit":"2409","message":"Got the QM and MM energies the wrong way around when setting the zero energy...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T14:22:10.658839Z","commit":"2408","message":"Fixed a small bug in the new analytic TI code\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T14:21:58.333064Z","commit":"2407","message":"Removed unnecessary print statements and updated default restart write rate for\nQuanToMM jobs\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-06T12:01:27.534039Z","commit":"2406","message":"Fixed some compile bugs in the wrappers\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-05T17:48:14.212675Z","commit":"2405","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-05T17:43:18.098408Z","commit":"2404","message":"Updated TI so that it can work with pure, analytic TI gradients.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-05T17:17:28.116430Z","commit":"2403","message":"Added the option to completely freeze the ligand during a waterswap simulation.\n\nAlso added in the beginning of the \"quantomm\" program for automatically calculating\nQM/MM to MM correction free energies\n\n"},{"author":"chryswoods@gmail.com","date":"2014-03-05T17:15:05.413618Z","commit":"2402","message":"Fixed a small crash caused when getting the ensemble of an empty moves object\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T16:54:21.418766Z","commit":"2401","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T16:51:44.714117Z","commit":"2400","message":"I've added functionality to calculate energies using the CLJDelta object. This needs to\nbe wrapped and unit tested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T16:07:56.510721Z","commit":"2399","message":"Fixed a bug revealed by unit testing\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T16:07:45.731754Z","commit":"2398","message":"Updated the unit test to test applying the delta into the CLJBox\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T15:56:40.220165Z","commit":"2397","message":"Python wrappers for the last commit\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T15:40:37.353809Z","commit":"2396","message":"I've added code so that a CLJDelta can be applied to a CLJBox. Now to add unit tests...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T14:09:28.917718Z","commit":"2395","message":"Python wrappers for the last commmit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T14:04:45.958179Z","commit":"2394","message":"Filling in functionality in CLJDelta and preparing to write the unit test.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T11:55:04.428900Z","commit":"2393","message":"Fixed some small bugs caused by refactoring that were caught by unit testing. \nsire_test passes without problems on my macbook\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T11:20:26.419147Z","commit":"2392","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-28T11:10:44.710815Z","commit":"2391","message":"I've optimised the memory layout of CLJBoxes (now store the boxes as a vector so it is \nquicker to iterate over, and will work better with the new CLJDelta class).\n\nI've also begun adding a CLJDelta class that will optimise memory management when\ncalculating changes in energies in moves\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-26T17:44:43.283020Z","commit":"2390","message":"Updated InterFF to have a 'fixed atom only' mode, and have cleaned up CLJBoxes so that\nit is easier for me to change the type of container used to store the boxes.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-26T17:44:10.444892Z","commit":"2389","message":"Updated unit tests to include a test of the grid/fixed only functionality of InterFF\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-26T16:09:50.156487Z","commit":"2388","message":"Added some more debugging to exception, and added some code to fix the behaviour of\nAmber() when it reads charmm-format topology files. The files still can't be read,\nand reading them causes a segfault, but at least now the molecules are built (a little)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-26T16:08:27.407946Z","commit":"2387","message":"Adding some debugging code when wrapping exceptions. I've noticed that exceptions\nthrown in the Amber object in Python cause a segfault.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T17:46:48.432478Z","commit":"2386","message":"Unit testing found that GridFF2 doesn't work. Switched to GridFF for comparison with\nInterFF.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T17:28:52.831244Z","commit":"2385","message":"Working on optimising and testing the integration of CLJGrid with InterFF\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T17:28:05.189853Z","commit":"2384","message":"Modified the unit test to include the grid and reflection sphere. The code is so slow...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T12:38:52.315598Z","commit":"2383","message":"Adding in optimisations and shortcuts in an attempt to speed up the simulation.\nThe new code is faster than the old, but not by as much as I want\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T11:23:27.817403Z","commit":"2382","message":"Unit test updated to test CLJBoxes calculation with CLJFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T11:13:59.733458Z","commit":"2381","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T11:02:34.912110Z","commit":"2380","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-25T10:59:26.702600Z","commit":"2379","message":"Added additional functionality to CLJFunction so that it can calculate energies using\nCLJBoxes\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-24T17:51:06.875571Z","commit":"2378","message":"I've changed \"update\" so that it doesn't take a copy before updating. This removes\nsome safety but it stops lots of copying in most of the moves.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-24T17:50:23.245949Z","commit":"2377","message":"Slight update to the unit test. InterFF is passing the test and is not too slow now\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-24T17:25:05.932534Z","commit":"2376","message":"Here are the bugfixes and optimisations needed to get InterFF working.\n\n"}]}