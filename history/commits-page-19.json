{"Page":19,"TotalPages":28,"commits":[{"author":"chryswoods","date":"2009-06-06T23:21:37.206350Z","commit":"975","message":"I've further cleaned up the classes used to render the scene and have properly added\nthe code to cache rendered images and rendered selection images.\n\n"},{"author":"chryswoods","date":"2009-06-06T16:30:05.301607Z","commit":"974","message":"I've got Spier working again, and have added a GlobalSharedPointer to make it easy to ensure\nthat there is only a single copy of an object. I've made most of the Spier classes\ninto streamable properties and have added the code to save rendering to a QImage so \nthat it can be restored if rendering the scene takes too long.\n\n"},{"author":"chryswoods","date":"2009-06-04T16:57:57.952211Z","commit":"973","message":"I meant qstrict, not qstring  (too much Qt...)\n\n"},{"author":"chryswoods","date":"2009-06-04T16:55:58.458260Z","commit":"972","message":"I've added optimisation flags for xlC as it is a little slow at the moment...\n\n"},{"author":"chryswoods","date":"2009-06-04T16:45:44.772100Z","commit":"971","message":"I've fixed a configure error if webkit is available but OpenGL isn't \n\n  - also, the code now fully compiles and works on powerpc/xlC and intel/icpc\n\n (just core code - not the python wrappers yet)\n\n"},{"author":"chryswoods","date":"2009-06-04T15:50:43.910174Z","commit":"970","message":"I've fixed the include directories for sire_browser and Spier so that they work\nif the include files are in different directories.\n\n"},{"author":"chryswoods","date":"2009-06-04T15:21:17.746265Z","commit":"969","message":"I've fixed a compile bug using xlC\n\n"},{"author":"chryswoods","date":"2009-06-04T11:54:39.775665Z","commit":"968","message":"I've fixed another couple of SSE bugs...\n\n"},{"author":"chryswoods","date":"2009-06-04T11:45:27.772692Z","commit":"967","message":"I've fixed another couple of SSE compile bugs with the intel compiler.\n\n"},{"author":"chryswoods","date":"2009-06-04T11:20:27.571896Z","commit":"966","message":"I've fixed an sse compile bug using the intel compiler\n\n"},{"author":"chryswoods","date":"2009-06-04T11:10:04.449053Z","commit":"965","message":"I've fixed an energy bug caused by the spaces SSE code loading up the distances the\nwrong way around in the SSE vector (uses _mm_set_pd when I needed _mm_setr_pd).\n\nI've also added nearly all of the out-of-line typeName classes now\n\n"},{"author":"chryswoods","date":"2009-06-03T19:14:02.912108Z","commit":"964","message":"I've updated the SSE code in the other potentials to be compatible with the Intel C++\ncompiler, and have also moved typeName() out of line for most of the other classes.\n\n"},{"author":"chryswoods","date":"2009-06-03T15:54:06.354085Z","commit":"963","message":"I've cleaned up the options for the intel compiler\n\n"},{"author":"chryswoods","date":"2009-06-03T15:51:08.912075Z","commit":"962","message":"I've made some changes to support SSE using the intel compiler, and to remove some warnings\nwhen compiling with the intel compiler\n\n"},{"author":"chryswoods","date":"2009-06-03T14:37:59.730794Z","commit":"961","message":"I've updated the location in which templates are instantiated to remove some\nwarnings from xlC - most of SireMol has now compiled using xlC (although it is\ntaking an inordinately long time!)\n\n"},{"author":"chryswoods","date":"2009-06-03T14:32:16.336400Z","commit":"960","message":"I've updated the CMakeLists.txt file to make it easier to set options for different compilers.\n\n"},{"author":"chryswoods","date":"2009-06-03T12:43:15.545334Z","commit":"959","message":"I've fixed some more xlC warnings, and have removed the ill-placed \"using\" declarations\nfrom Connectivity and ConnectivityEditor\n\n"},{"author":"chryswoods","date":"2009-06-03T12:13:26.692037Z","commit":"958","message":"I've fixed missing qHash functions for MonitorIdentifier and SysIdentifier, and have fixed a \nfew warnings for xlC when compiling atomidentifier.cpp\n\n"},{"author":"chryswoods","date":"2009-06-03T11:35:16.002448Z","commit":"957","message":"I think that I have now cleanly solved the qHash problem with g++ by moving all \nof the qHash functions into the same namespace as the object being hashed.\n\n"},{"author":"chryswoods","date":"2009-06-03T10:54:01.244130Z","commit":"956","message":"I've found that I can get g++ to find the qHash function by making sure that it is in the same\nnamespace as the object being hashed (see build/test_compiler/test_qhash_lookup)\n\n"},{"author":"chryswoods","date":"2009-06-03T10:22:25.296518Z","commit":"955","message":"I've run into the problem of g++ not finding the qHash function again as I had to remove the\ntemplate\u003cclass T\u003euint qHash(const T \u0026obj) overload as this didn't work with xlC (it triggered the \nbug that xlC could not then distinguish between qHash(const T*) and qHash(const T\u0026)). I'm\ntrying a workaround now, but this has broken the code with g++\n\n"},{"author":"chryswoods","date":"2009-06-02T15:26:40.685447Z","commit":"954","message":"I also had to fix the (admittedly stupid!) use of using directives in IDAndSet and IDOrSet\n\n"},{"author":"chryswoods","date":"2009-06-02T15:21:22.315413Z","commit":"953","message":"Fixing problems caused by using a template constructor class in the specialisation\nof IDAndSet\u003cMolID\u003e and IDOrSet\u003cMolID\u003e\n\n"},{"author":"chryswoods","date":"2009-06-02T15:11:02.806379Z","commit":"952","message":"I've updated SireMol to use non-inline typeName functions\n\n"},{"author":"chryswoods","date":"2009-06-02T13:38:53.434851Z","commit":"951","message":"I've removed all inline functions from SireCAS::Complex (moving them into complex.cpp) in \nan attempt to work around an internal compiler error in xlC\n\n"},{"author":"chryswoods","date":"2009-06-02T11:23:33.244920Z","commit":"950","message":"More updates to fix compilation using xlC...\n\n"},{"author":"chryswoods","date":"2009-06-02T10:54:52.732812Z","commit":"949","message":"I've fixed some dodgy operator overloading in Quaternion (which is a *very* old class)\n\n"},{"author":"chryswoods","date":"2009-06-02T10:45:31.486255Z","commit":"948","message":"Needed to declare friend functions for xlC...\n\n"},{"author":"chryswoods","date":"2009-06-02T10:41:17.676003Z","commit":"947","message":"More fixes for xlC...\n\n"},{"author":"chryswoods","date":"2009-06-02T10:30:55.080825Z","commit":"946","message":"I've updated SireMaths to make it compatible with xlC\n\n"},{"author":"chryswoods","date":"2009-06-02T10:02:37.791125Z","commit":"945","message":"I've made some more changes that should help compilation using xlC\n\n"},{"author":"chryswoods","date":"2009-06-01T15:45:00.150995Z","commit":"944","message":"I've moved typeName into the source files for SireBase. The code appears to be compiling\nand working (so far) on AIX.\n\n"},{"author":"chryswoods","date":"2009-06-01T15:35:33.691297Z","commit":"943","message":"Commit to make compatible with HPCx"},{"author":"chryswoods","date":"2009-06-01T14:01:46.953762Z","commit":"942","message":"I've moved ::typeName() in SireError and SireStream...\n\n"},{"author":"chryswoods","date":"2009-06-01T13:41:54.481158Z","commit":"941","message":"I'm adding in the openGL mesh classes, and am about to settle in to an afternoon of\nmoving T::typeName() inline functions from the header file to the source file\n(so that the code will compile with xlC... - currently I am triggering the\nerror listed in \u003chttp://issues.apache.org/jira/browse/STDCXX-301\u003e using inline\ndefinitions of qMetaTypeId\u003cT\u003e())\n\n"},{"author":"chryswoods","date":"2009-06-01T13:38:15.027392Z","commit":"940","message":"Commit to make compatible with HPCx"},{"author":"chryswoods","date":"2009-06-01T12:14:12.368368Z","commit":"939","message":"Commit to make compatible with HPCx"},{"author":"chryswoods","date":"2009-05-31T22:00:41.481822Z","commit":"938","message":"I've made progress updating and integrating the old GLCanvas class...\n\n"},{"author":"chryswoods","date":"2009-05-31T17:24:09.203099Z","commit":"937","message":"I'm moving across the Spier classes that I will be re-using in the plugin...\n\n"},{"author":"chryswoods","date":"2009-05-31T16:36:03.461483Z","commit":"936","message":"I'm playing with a web-browser plugin that can be used to view information about a molecule.\nThis will re-use a lot of code from the old Spier application (and indeed will become\nwhat spier was intended to be).\n\n"},{"author":"chryswoods","date":"2009-05-30T22:10:11.315385Z","commit":"935","message":"I'm making good progress with the second generation molecular dynamics code. I've\nadapted AtomProperty, CoordGroupArray and MolForceTable so that I can easily\nextract arrays of values for any atom selection, so that then the integrator can\njust deal with raw arrays. This significantly simplifies the integrator code.\n\n"},{"author":"chryswoods","date":"2009-05-28T14:38:25.403484Z","commit":"934","message":"I've fixed the printing out of units (so now angstrom-1 is printed, rather than L^-1). I've\nalso fixed a bug whereby the temperature of rigid body MC moves was ignored, and where\ntemperatures could not be set using 25*celsius\n\n"},{"author":"chryswoods","date":"2009-05-27T09:42:41.543643Z","commit":"933","message":"I've added a \"sire_ipython\" executable so that I can run ipython on systems that don't\nhave libgomp linked to the python library.\n\n"},{"author":"chryswoods","date":"2009-05-27T07:38:58.153456Z","commit":"932","message":"I've added code to calculate the total charge of parts of the molecule.\n\n"},{"author":"chryswoods","date":"2009-05-26T08:49:16.911478Z","commit":"931","message":"I forgot that I needed to also commit the special_code.py so that the python wrappers\nfor AtomVelocities and AtomForces will work...\n\n"},{"author":"chryswoods","date":"2009-05-26T08:31:06.422565Z","commit":"930","message":"I've added classes to hold atomic velocities and forces, so that they can be returned\nby the integrator if they need to be saved, and also so that they can be used as properties\nby the velocity generator classes.\n\n"},{"author":"chryswoods","date":"2009-05-21T21:43:55.379629Z","commit":"929","message":"I've switched MoleculeView over to be derived from Property, so now finally I can\nnest molecule views within one another (and fix some performance bugs and annoyances\nas missing API functions). It is all compiling now, and it looks like it\nis working...\n\n"},{"author":"chryswoods","date":"2009-05-19T21:33:00.672547Z","commit":"928","message":"I've fixed memory problems when running a replica simulation - TrajectoryMonitor was\nholding an unnecessary copy of the molecule group, and Replica was holding a whole\nother swapped replica, when it only needed to hold a SimStore - these two things\nmeant that sire_python was taking too much memory when running the protein simulation.\n\nNow, I can run the neuraminidase protein with 8 replicas in about 300-400MB, so can\nrun two mpi jobs comfortably on my laptop (and additional replicas don't cost\nany more memory as they are packed to disk!)\n\nI think that I have (finally!) solved the protein memory problems. The next issue\nmay be that it just takes too long to serialise and deserialise the system, \nalthough running 8 replicas on 2 processors took 5 minutes, so it is not a showstopper.\n\n"},{"author":"chryswoods","date":"2009-05-19T12:46:30.387443Z","commit":"927","message":"I've fixed a bug in the reading of a RepExSubMove from a binary stream\n\n"},{"author":"chryswoods","date":"2009-05-19T12:15:50.547952Z","commit":"926","message":"I've added the number of moves to the Move and Moves object, have added the ability to set\na random number generator differently for each replica and have got the velocity generators\nto compile.\n\n"},{"author":"chryswoods","date":"2009-05-19T07:56:58.847345Z","commit":"925","message":"I am filling in the velocity generator classes...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-18T21:00:55.314116Z","commit":"924","message":"The new replica exchange script is nearly ready - it works and the output is\nvery clear. I should however also add something to print out the move\nacceptance data.\n\n"},{"author":"chryswoods","date":"2009-05-18T15:55:58.923782Z","commit":"923","message":"I am making good progress sorting out the new replica exchange simulation script\n\n"},{"author":"chryswoods","date":"2009-05-18T10:19:47.483991Z","commit":"922","message":"I'm continuing to work on the molecular dynamics subsystem...\n\n"},{"author":"chryswoods","date":"2009-05-16T17:08:38.589094Z","commit":"921","message":"I've worked out how the MD move and associated integrators work, and am making \ngood progress writing the velocity verlet integrator\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-15T23:20:09.537578Z","commit":"920","message":"I've added (and python wrapped) a MonitorComponents class, which is a more general\nversion of MonitorComponent, and can monitor multiple components of a System, \nand copes with components that appear and disappear\n\n"},{"author":"chryswoods","date":"2009-05-15T21:25:58.007345Z","commit":"919","message":"I've added the ability to clear selected monitors - this allows MonitorMonitor to work.\n\nCode compiles, links and python wrappers work\n\n"},{"author":"chryswoods","date":"2009-05-15T15:54:23.572139Z","commit":"918","message":"I've added a MonitorMonitor class that will me copy monitors from Systems to SupraSystems\n\nI've also compiled the code on Linux, and it compiles and links without error.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-15T14:25:37.859067Z","commit":"917","message":"I've got the python wrappers for all of the Replica/Supra classes working, compiled and \nlinked, and I have also updated the save/load functions of SireStream so that multiple\nobjects can be saved and loaded from binary files or binary data (so we can now\nsave the moves together with the system). This is still preserving the ability to \nread old files that have only one object :-)\n\nCode is working again, although new replica classes are not tested\n\n"},{"author":"chryswoods","date":"2009-05-14T22:16:27.433693Z","commit":"916","message":"I've finished writing the code that has moved RepExMove to the new SupraSystem framework.\nIt is now possible to run a replica exchange simulation where the master node *never*\nneeds to unpack the replicas (and no node needs to have more than 2 replicas in memory\nat any one time) - and the replica test is distributed across all of the nodes,\nso we've lost the bottleneck for lots of replicas.\n\nThe code is much cleaner than the original version - it just needs testing now...\n\n(and wrapping in python - and legacy binary files need to be handled as well...)\n\nCode compiles and links, but python wrappers need testing, as does the code\n\n"},{"author":"chryswoods","date":"2009-05-14T15:54:44.733877Z","commit":"915","message":"I've ported RepExReplica and RepExReplicas to the new SupraSystem framework, and am in \nthe process of porting across RepExMove.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-13T22:44:33.007091Z","commit":"914","message":"I've written the Replica class, which fully compiles (but needs testing). I've built\ninto this class the ability to defer commands while the subsystem is packed, until\nimmediately after it is unpacked. This will allow the replicas class to set ensemble\nparameters and swap systems without constantly unpacking and repacking the replicas.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-13T13:12:52.687917Z","commit":"913","message":"I've moved the Replicas and RepExReplicas classes into a deprecated directory. This is the \nstart of me allowing Sire to still load old save files using these classes...\n\n"},{"author":"chryswoods","date":"2009-05-12T22:36:43.231101Z","commit":"912","message":"I've finished coding the SupraSim and SupraSubSim classes. Everything compiles and links,\nas do the python wrappers. Next I must integrate Replicas/RepExReplicas and RepExMove\nwith the new framework, and then test everything.\n\n"},{"author":"chryswoods","date":"2009-05-12T20:40:48.613705Z","commit":"911","message":"I've filled in SupraSystem, SupraSimPacket, SupraSubSystem and SupraSubSystemPacket. Just\nSupraSim and SupraSubSim left now... (and then integrating Replicas/RepExReplicas and \nRepExMove into the new framework)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-12T15:54:22.394095Z","commit":"910","message":"I've made progress, filling in the code for SupraSubSystem and much of SupraSystem\n\n"},{"author":"chryswoods","date":"2009-05-11T20:37:20.346458Z","commit":"909","message":"I've filled in the code for SupraMove, SupraMoves, SupraSubMove and SupraSubMoves (and their\nNull and Same equivalents)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-11T19:11:03.533799Z","commit":"908","message":"I've specced out all of SupraSystem header files - now to start filling in the functions...\n\n"},{"author":"chryswoods","date":"2009-05-11T15:50:30.986414Z","commit":"907","message":"I'm formalising the code used to run supra-simulations, and am in the process of\nwriting and speccing out all of the classes necessary to do this \n(all in SireMove/supra*.h and SireMove/supra*.cpp)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-05-11T10:59:15.483689Z","commit":"906","message":"I've written an trajectory monitor class that can be used to follow the coordinates of selected\nmolecules throughout a simulation. This is part of solving the problem of continually unpacking\nand repacking a replica, as now the node can write the PDB file, without it needing to be\nwritten by the master\n\n"},{"author":"chryswoods","date":"2009-05-09T16:23:51.911129Z","commit":"905","message":"I've added a memory monitoring function to MemInfo that uses a background thread to \ntake measurements of memory usage at user-defined intervals.\n\n"},{"author":"chryswoods","date":"2009-05-09T15:32:18.002090Z","commit":"904","message":"I've improved the packing behaviour of SimStore, and given it a memory so that\npack will restore the last packed state from the last unpack. I've also improved\nSimPacket so that it's packing and unpacking of SireStore objects is now more\nlogical.\n\n"},{"author":"chryswoods","date":"2009-05-08T15:53:46.939926Z","commit":"903","message":"I've updated the openmp test to disable openmp on a mac\n\n"},{"author":"chryswoods","date":"2009-05-08T15:52:51.585953Z","commit":"902","message":"I've fixed the template virtual function call problems on my mac, have investigated the fact\nthat openmp+pthreads doesn't work on the mac, and have verified that the code now works\nproperly on linux\n\n"},{"author":"chryswoods","date":"2009-05-07T15:37:22.895454Z","commit":"901","message":"I've filled in missing functions in the new MD classes, and have made sure that their\nwrappers can now compile.\n\n"},{"author":"chryswoods","date":"2009-05-07T15:36:11.130304Z","commit":"900","message":"I've fixed a bug in CMakeLists.txt that meant that openmp support was not being compiled into the wrappers.\n\n"},{"author":"chryswoods","date":"2009-05-07T15:10:29.046633Z","commit":"899","message":"I've had to make some changes to the Qt wrappers to make them compile with Qt 4.2. I've also had to add an explicit\ninclude \u003cPython\u003e to the object registrars to fix a compile error on linux.\n\n"},{"author":"chryswoods","date":"2009-05-07T14:07:39.121856Z","commit":"898","message":"I've fixed more compile problems and have also updated the cmake script for the python\nwrappers so that openmp can be explicitly disabled for them as well.\n\n"},{"author":"chryswoods","date":"2009-05-07T13:30:11.398452Z","commit":"897","message":"I've fixed the remaining compilation problems on linux x86-64 using Qt 4.2\n\n"},{"author":"chryswoods","date":"2009-05-07T12:53:28.309132Z","commit":"896","message":"I've fixed another compile bug for older Qt (4.2) and have added gcc compiler options to \nexplicitly disable OpenMP if this is specified by ccmake\n\n"},{"author":"chryswoods","date":"2009-05-07T12:47:01.346365Z","commit":"895","message":"I've fixed a compile error for older versions of Qt (Qt 4.2)\n\n"},{"author":"chryswoods","date":"2009-05-07T12:31:05.674364Z","commit":"894","message":"I've fixed a few symbol hiding compile bugs...\n\n"},{"author":"chryswoods","date":"2009-05-06T19:01:40.555924Z","commit":"893","message":"I've begun work on the molecular dynamics move (together with interchangable integrators)\nand have written some code to get the memory usage of the program (as I think that\nfragmentation is causing a memory leak on OS X)\n\nDynamics code is broken (but the rest is fine)\n\n"},{"author":"chryswoods","date":"2009-05-04T13:09:37.169403Z","commit":"892","message":"I've extended pack to disk support to the Replicas class.\n\n"},{"author":"chryswoods","date":"2009-04-30T15:47:28.060313Z","commit":"891","message":"I've added \"packToDisk\" support for SimStore, so that replicas can be temporarily packed to disk, \nrather than to RAM. This should help for simulations using a large number of large replicas.\n\n"},{"author":"chryswoods","date":"2009-04-29T07:39:18.596611Z","commit":"890","message":"I've added shared streaming support to CoordGroupArray, PackedArray2D and have also fixed \nshared streaming for the other classes. It all seems to work, and can still successfully\nread the old share stream formats. I have bumped up the shared stream format to version 2.\n\n"},{"author":"chryswoods","date":"2009-04-23T14:56:18.905661Z","commit":"889","message":"I'm making progress with the new SharedDataStream format and code\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-04-20T15:53:34.879030Z","commit":"888","message":"I'm working on adding shared streaming support for more shared containers, and I have made the\ncode that runs Molpro commands more robust.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2009-03-12T11:04:53.333199Z","commit":"887","message":"Added explicit check to find pthread library in SireDB cmake file.\n\n"},{"author":"chryswoods","date":"2009-03-11T20:13:34.874882Z","commit":"886","message":"I've finished speeding up the calculation - now Sire is running at about 30 moves per second\nfor the periodic box neuraminidase system (as opposed to 3 moves per second last week!), and\nI've doubled the speed of the moves of a water box (1000 moves in 2.5s rather than 5.5s).\n\nThis is now only about 2-3 times slower than ProtoMS, which is not too bad. And I still\nhave some tricks to use :-)\n\n"},{"author":"chryswoods","date":"2009-03-11T18:18:47.988693Z","commit":"885","message":"The ChunkedHash works, and really does speed up the code. Now I am tracking down a bottleneck(bug)\nwhere the protein solvent energy takes 700ms as the whole protein solvent energy is calculated,\nrather than just the energy of a single moving residue.\n\n"},{"author":"chryswoods","date":"2009-03-11T15:43:31.412527Z","commit":"884","message":"I've tracked down a major performance loss when copying the Molecules class (which happens A LOT!).\n\nThe QHash does need to be chunked up, which I have now done (added ChunkedHash class).\n\nThis needs testing and performance measured.\n\n"},{"author":"chryswoods","date":"2009-03-09T15:54:11.684873Z","commit":"883","message":"I've checked and ChunkedVector is now working, and does seem to have improved the speed with\nwhich the forcefields are updated.\n\n"},{"author":"chryswoods","date":"2009-03-08T21:16:14.817379Z","commit":"882","message":"I've merged ChunkedVector into all of the forcefields - I am getting an assert failure when I \ntry to run Sire though. On the plus side, merging ChunkedVector in was surprisingly\neasy (famous last words... - it will probably be horribly slow!)\n\n"},{"author":"chryswoods","date":"2009-03-08T16:14:43.952318Z","commit":"881","message":"I've got ChunkedVector mostly working (tested in python) - now lets try using it\nin the forcefields...\n\n"},{"author":"chryswoods","date":"2009-03-07T22:09:53.938052Z","commit":"880","message":"I've begun work on a ChunkedVector class that stores an array of objects in an array of\narrays. This means that changing just one object will not result in a copy of the entire\narray, but will just involve copying the chunk of the array that changes. This should speed\nup Monte Carlo moves on large systems, as at the moment, each move involves copying \nall of the molecules, which can get slow when there are 16 thousand water molecules...\n\nI will also have to write a ChunkedHash, as the 'Molecules' class uses a QHash at \nthe moment, which is also inefficient for 16 thousand waters...\n\n"},{"author":"chryswoods","date":"2009-03-07T16:57:09.542610Z","commit":"879","message":"I've sorted out SimPacket so that it can pack the system using non-const pack and unpack functions\n(so that the user has to explicitly pack and unpack, thereby removing the stupid continual\npack and unpack within the script)\n\n"},{"author":"chryswoods","date":"2009-02-25T11:01:16.916671Z","commit":"878","message":"I've updated PrefSampler so that it uses a SireCAS::Expression for the preferential sampling\nbiasing function. This allows for the use of completely arbitrary preferential sampling\nexpressions to be specified from the Python script.\n\n"},{"author":"chryswoods","date":"2009-02-24T13:13:30.986349Z","commit":"877","message":"I've written a \"Process\" class that abstracts away the details and error catching of\nrunning an external process and have changed Molpro and ProtoMS to use this\nnew class. Hopefully, this will fix the problems I have been experiencing\nwith occasional Molpro jobs freezing Sire.\n\n"},{"author":"chryswoods","date":"2009-02-18T21:41:34.289164Z","commit":"876","message":"I've removed the unnecessary locks from simstore.cpp and I've fixed an insidious bug in \nLJParameterDB that meant that under certain circumstances, the *WRONG* LJ parameters\nwere returned, which lead in some cases to wrong energies.\n\n"}]}