{"Page":5,"TotalPages":28,"commits":[{"author":"chryswoods@gmail.com","date":"2014-02-24T17:24:42.816044Z","commit":"2375","message":"Committing the unit test I am using to debug and profile InterFF (which is working,\nbut is too slow!)\n\n"},{"author":"julienmich@googlemail.com","date":"2014-02-23T18:02:19.623891Z","commit":"2374","message":"Commit of the updated wrappers\n"},{"author":"julienmich@googlemail.com","date":"2014-02-23T18:01:38.731832Z","commit":"2373","message":"Modified the code to make EnergyTable work with distance restraints. \n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T17:32:48.587519Z","commit":"2372","message":"Beginning of the unit test for InterFF. It is much faster, but gives the wrong \nanswer and is slower for adding and updating than I want\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T17:32:12.867042Z","commit":"2371","message":"Beginning to debug and test...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T17:11:58.219052Z","commit":"2370","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T17:06:02.525975Z","commit":"2369","message":"I've filled in nearly all of the functionality of InterFF. This all needs to be wrapped and\ntested. I foresee a week of debugging and optimising ahead...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T15:17:04.619899Z","commit":"2368","message":"Fixed small problem when running the test as part of sire_test\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T15:09:09.156898Z","commit":"2367","message":"Here is the unit test...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-21T15:07:53.395947Z","commit":"2366","message":"Fixed the bugs when adding a molecule to a box (as tested in the unit test about\nto be committed)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T18:54:47.391973Z","commit":"2365","message":"I am debugging adding atoms to CLJBoxes. The code is working a bit, but is not\npassing all of my tests (in last committed unit tests)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T18:54:15.519387Z","commit":"2364","message":"Committing the unit test that I am using to debug the adding of atoms to CLJBoxes\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T18:36:15.045428Z","commit":"2363","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T17:59:15.133940Z","commit":"2362","message":"Debugging the new CLJBox/es code, and added functions to retrieve a CLJAtom from\na CLJBox / CLJBoxes using an index or CLJBoxIndex\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T16:55:49.948913Z","commit":"2361","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T16:50:33.592536Z","commit":"2360","message":"Adding in functionality to CLJBoxes / CLJAtoms so that atoms can be added and removed\nfrom boxes, with the indexes of the atoms recorded (allowing for rapid removal)\n\nNeeds to be python wrapped and tested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T10:37:24.438486Z","commit":"2359","message":"Added a unit test that ensures that negating a set of CLJAtoms works, and that \ncalculating the energy of a set of CLJAtoms with its negative gives an energy of zero\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T10:24:54.793703Z","commit":"2358","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-20T10:20:20.783843Z","commit":"2357","message":"Optimised the MultiFloat negation operator and added a function to get the negative\nof a group of CLJAtoms (this will allow optimised calculations of energy differences)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T17:32:11.484927Z","commit":"2356","message":"Fixed a runtime bug picked up by the unit tests whereby implicit conversion\nof the Length type to LengthProperty resulted in infinite recursion\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T17:14:25.074039Z","commit":"2355","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T17:04:19.133387Z","commit":"2354","message":"I've begun work on the intermolecular CLJ forcefield (InterFF). In doing this I have had\nto add functions to CLJFunction to cope with setting and getting properties of the\nenergy function (hence added in a LengthProperty class). InterFF is complete, although\ncompletely functionally useless ;-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T15:00:38.178699Z","commit":"2353","message":"Update to add in an ID number for fixed atoms, to add code to ensure that dummy and\natoms with IDs equal to fixed atoms are ignored in the grid calculation and also\nadded the code to support periodic boundaries in the grid. All of this is working,\noptimised and unit tested :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T14:59:24.102138Z","commit":"2352","message":"Committing unit test that includes test for grids built using periodic boundaries\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T11:33:43.274082Z","commit":"2351","message":"Fixed a broken unit test\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T11:30:26.937834Z","commit":"2350","message":"Here is the updated unit test that ensures that the CLJGrid function\nis behaving correctly\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-19T11:30:04.125932Z","commit":"2349","message":"I've found the bug - I did not realise that the SSE/AVX integer multiplies \nonly multiplied half of the 32bit integers to give the 64bit results. I have \nupdated MultiInt so that the multiplication is performed manually.\n\nEverything is now working and the code is pretty fast :-)\n\nGRID  2:  -47.57409639941761  -53.465994983911514  5.891898584493902  (0.06369799999999999 ms)\nNO GRID:  -47.57338641530754  -53.46528499980144  5.891898584493902  (0.142954 ms)\nEXACT  :  -47.57338641530754  -53.46528499980144  5.891898584493902  (0.144115 ms)\nOLD    :  -47.573341982149756  -53.46525254843689  5.891910566287131  (1.5694009999999998 ms)\n\n(note vectorised code looks minutely slower as the non-vectorised code was\nnot testing if the atoms were within the grid)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-18T17:46:35.064543Z","commit":"2348","message":"I've tracked down the problem to the vectorised grid energy code... I've replaced\nthis with a non-vectorised version (which now works and agrees with the exact \ncalculation). I will need to debug the vectorised code to work out if this\nbug was due to something deeper in MultiFloat etc., or whether it was just\nme making a mistake when I wrote the vector version of pointToGridCorners\n\nAs as aside, here are the timings for the new CLJGrid energy :-)\n\nGRID  2:  -47.57409733950016  -53.465995923994065  5.891898584493902  (0.049217 ms)\nNO GRID:  -47.57338641530754  -53.46528499980144  5.891898584493902  (0.147337 ms)\nEXACT  :  -47.57338641530754  -53.46528499980144  5.891898584493902  (0.15206699999999998 ms)\nOLD    :  -47.72719650981324  -53.465252548436986  5.738056038623743  (1.207195 ms)\n\nThe energy has gone down from the old code (1.2 ms, to the new, grid code (0.05 ms).\n\nThis is quite a significant speed up :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-18T17:44:13.738270Z","commit":"2347","message":"Updated unit test that I have been using to debug the CLJGrid energy function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-18T16:52:01.538314Z","commit":"2346","message":"Python wrappers for the last commit (to help dubugging!)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-18T16:46:54.161521Z","commit":"2345","message":"I am debugging the CLJGrid class as the grid energy is not correct...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-18T12:15:44.297852Z","commit":"2344","message":"Updated MultiInt/MultiFloat to use SSE4 for integer multiplication\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-18T11:53:27.904186Z","commit":"2343","message":"I've moved the parallel code into CLJFunction and have optimised the grid calculation in \nCLJShiftFunction (now twice as fast as the optimised GridFF2 and about 15 times faster\nthan the original GridFF)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T18:31:37.717752Z","commit":"2342","message":"I've added in the code to fully calculate grid energies and am in the process\nof parallelising and testing the code\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T18:31:12.548568Z","commit":"2341","message":"Adding in some unit tests for the new code\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T16:07:04.326695Z","commit":"2340","message":"Fixed python wrapper compile bugs\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T16:01:53.719965Z","commit":"2339","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T15:58:51.406848Z","commit":"2338","message":"Fixed small bugs in the definition of boxes and added functions to get the \ncoordinates of each grid point\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T15:48:45.951999Z","commit":"2337","message":"Python wrapper for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T15:42:37.106586Z","commit":"2336","message":"I've moved the tri-linear interpolation code into GridInfo and have added a vectorised\nversion of the algorithm\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T12:12:04.353207Z","commit":"2335","message":"Working on adding functionality to GridInfo...\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T11:10:38.829976Z","commit":"2334","message":"Fixed compile bug with GridInfo\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T10:49:23.517961Z","commit":"2333","message":"Python wrappers for the last commits\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-17T10:41:37.762612Z","commit":"2332","message":"Adding streaming operators to GridIndex\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-14T14:20:18.177979Z","commit":"2331","message":"I've updated and finished the code for CLJGrid. It all compiles and links. I will \nneed to update the python wrappers to include the new code...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-14T12:20:47.865755Z","commit":"2330","message":"I've finished off the GridInfo/GridIndex classes and have updated CLJGrid to use them.\nEverything seems to compile but it all needs testing and finishing.\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-13T17:20:51.414108Z","commit":"2329","message":"Building a CLJGrid object that will use CLJFunctions to calculate energies using\na grid (replacement for GridFF and GridFF2). This will be built into all forcefields\nso that I don't need to have separate grid- and non-grid forcefields (as this makes\nthe resulting energy expressions really painful, especially for such a simple\nand sometimes tiny optimisation!)\n\nCode is broken\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T17:16:32.708225Z","commit":"2328","message":"Units tests included for intramolecular geometric combining rules\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T17:16:09.088325Z","commit":"2327","message":"Added in geometric combining rules for the intramolecular energies.\nAll unit tested and all correct :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T17:02:26.940819Z","commit":"2326","message":"Unit tests for geometric combining rules\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T17:01:43.331840Z","commit":"2325","message":"Added in all of the geometric combining rules intermolecular energies\nwith associated unit test (all passed)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T16:35:25.316061Z","commit":"2324","message":"Here is the updated unit test\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T16:35:13.899612Z","commit":"2323","message":"Added in the code for periodic boundaries support for intramolecular calculations. This\nis unit tested (unit test in next commit) and works :-). And is very fast.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T15:29:34.513449Z","commit":"2322","message":"Updated the tests for the new inter and intramolecular energy functions. Made them\ninto proper tests and have checked that sire_test has all tests pass on my macbook\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T12:18:45.113738Z","commit":"2321","message":"Here is the timing and unit test script\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-12T12:18:22.300177Z","commit":"2320","message":"I've fixed the bugs in the periodic boundaries version of CLJFunction and have\ncode now that is very fast compared to the original :-)\n\nVacuum boundary conditions\nOLD: -20798.715216502675  -24208.43612722678  3409.7209107241083  148.843717 ms\nNEW: -20798.716843382957  -24208.435475442242  3409.7186320592846  69.205522 ms\nBOX: -20798.716843382936  -24208.43547544222  3409.7186320592846  19.725652 ms\n\nPeriodic box boundary conditions\nOLD: -23626.215067800073  -27244.51680654721  3618.3017387471377  292.450163 ms\nNEW: -23626.21594117391  -27244.51287413524  3618.2969329613297  107.070025 ms\nBOX: -23626.215941173938  -27244.512874135267  3618.2969329613297  55.433907999999995 ms\n\nGroup Vacuum boundary conditions\nOLD: -167.38332965416353  -191.46433947055957  24.081009816396023  1.67947 ms\nNEW: -167.38351001453188  -191.464498922984  24.080988908452127  0.554539 ms\nBOX: -167.38351001453188  -191.464498922984  24.080988908452127  0.341781 ms\n\nGroup Periodic box boundary conditions\nOLD: -191.08093521097652  -215.83191565094342  24.75098043996691  2.8477799999999998 ms\nNEW: -191.08109450552442  -215.83205639603042  24.750961890506005  0.88747 ms\nBOX: -191.08109450552442  -215.83205639603042  24.750961890506005  0.703114 ms\n\n(output from test_newinter.py, which will be committed next)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T17:21:50.084757Z","commit":"2319","message":"Here is that unit test...\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T17:21:37.408113Z","commit":"2318","message":"I've added in the code to calculate energies with periodic boundaries, but while\nthe energy using a single CLJAtoms object is correct, the one using \na set of CLJBoxes is not... (offending unit test update committing next..)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T15:07:22.433016Z","commit":"2317","message":"Optimised the abs function by moving the mask into static const space\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T14:53:38.091141Z","commit":"2316","message":"Added a quick test of the abs function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T14:44:11.760389Z","commit":"2315","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T14:41:33.438178Z","commit":"2314","message":"Fixed some small compile bugs in MultiFloat and MultiUInt\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T14:37:34.287569Z","commit":"2313","message":"Added an \"abs\" function to MultiFloat\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T13:59:40.168826Z","commit":"2312","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T13:50:41.706063Z","commit":"2311","message":"Added a unit test for the QElapsedTimer\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T12:04:25.536361Z","commit":"2310","message":"I've added code to calculate only the coulomb and LJ energies and have also\ngenerally debugged the energy functions\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-11T12:03:44.190160Z","commit":"2309","message":"Adding in wrappers for QElapsedTimer (a nanosecond timer!) and added a new unit\ntest for the intermolecular energy CLJ functions.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T18:21:41.270912Z","commit":"2308","message":"Here's the python script that can be used for timing.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T18:21:23.851320Z","commit":"2307","message":"Yes, that did it - the energy calculation has fallen to 16 ms, which is close to the \ntime for the calculation without the non-bonded test :-)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T18:18:04.769360Z","commit":"2306","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T18:15:24.275140Z","commit":"2305","message":"I've added the ability to pass the minimum distance to the CLJFunctions, so that\nthe intramolecular code can use this to work out if it needs to test if the atoms\nare bonded together\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T17:57:41.853770Z","commit":"2304","message":"I've slightly optimised the code to discover if two sets of CLJAtoms are bonded\nor not. The calculation now takes about 22 ms compared to over 340 ms for the \noriginal code.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T17:19:31.083741Z","commit":"2303","message":"I've added code to find water molecules that overlap with the ligand to see if this is \na better way of finding the identity points.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T16:28:42.685425Z","commit":"2302","message":"I've added an option to fix the identity points so that they don't move with the \nligand during a waterswap calculation\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T16:08:26.382771Z","commit":"2301","message":"The intramolecular energy function is definitely working and is about 20 times faster\nthan the old code on my macbook air :-)\n\nI've also fixed a bug in the WSRC code where the random order of the keys in a python 3\ndictionary was causing the identity points algorithm to return a random set of identity\npoints\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T15:41:58.361157Z","commit":"2300","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T15:37:02.018158Z","commit":"2299","message":"The intramolecular CLJ function appears to be working. As it doesn't calculate\nthe 14 energies, I have had to update Amber so that I can set the 14 scale factors\n(which I will set to 0) so that I can test it. As I was updating Amber, I have\nalso changed it to return a MoleculeGroup rather than Molecules object\n(to solve all of the 'order of molecules' problems)\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T12:14:44.797127Z","commit":"2298","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T12:11:39.611573Z","commit":"2297","message":"Updated CLJIntraFunction and CLJIntraShiftFunction to use the new Connectivity functions\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T11:53:46.556109Z","commit":"2296","message":"Here are the python wrappers together with unit tests for the new connectivity functions\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T11:53:19.637695Z","commit":"2295","message":"I've got all of the bond matrix functions working, optimised and tested\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T11:23:26.626305Z","commit":"2294","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T11:20:17.267338Z","commit":"2293","message":"Adding in functions to test if atoms are in bonds, angles or dihedrals\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T10:49:35.779489Z","commit":"2292","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-10T10:38:54.162215Z","commit":"2291","message":"I'm working on finding ways of speeding up the intramolecular evaluation. I've added\ncode to Connectivity to build bond matricies.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T18:14:09.279503Z","commit":"2290","message":"I've added a wrapper for tuple\u003cdouble,double\u003e, have moved the TBB initialisation\nto python/main.cpp and have added some more code to the unit test for the new\nintramolecular energy function\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T18:13:06.659471Z","commit":"2289","message":"The CLJIntraShiftFunction is now working and giving the same energy as the \nIntraCLJFF forcefield. However, when doing this I noticed that in IntraCLJPotential\nI had deliberately not applied to cutoff to the 1-4 interactions. I think that this\nis not a good choice, so I have now applied the cutoff to all intramolecular\ninteractions, including the 1-4. This will slightly change the intramolecular\nCLJ energy calculated by Sire if using the shift_electrostatics or reaction_field\ncutoffs.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T14:31:16.762106Z","commit":"2288","message":"I've accelerated the code to get the nonbonded pairs into the CLJIntraFunction\n(now takes less than a second instead of hours!) and have slightly optimised\nthe loading of pairs in Amber.\n\nI will likely rewrite the pairs or make Amber() give me new style pairs\nas the ones optimised for access by CutGroup are extremely inefficient\nfor any other form of access.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T12:15:48.046658Z","commit":"2287","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T12:02:57.034109Z","commit":"2286","message":"I've refactored CLJIntraScaleFunction to bring out the parts common for intramolecular\ncalculations into CLJIntraFunction. I've filled in the code to extract the non-bonded\nscale factors from CLJNBPairs and have updated the energy code to use these factors.\nHopefully it is now all working... Just need to update the python wrappers and write\nsome unit tests to be sure.\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T10:40:03.666686Z","commit":"2285","message":"Adding in unit test for CLJIntraShiftFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-06T10:39:44.478135Z","commit":"2284","message":"Fixed compile bug in the CLJIntraShiftFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T17:38:12.991493Z","commit":"2283","message":"I've added in most of the code to calculate intramolecular energies. It all needs to be \ndebugged, and I also have to write the code to generate the hash of intramolecular\ninteratomic non-bonded scale factors\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T17:06:53.890062Z","commit":"2282","message":"Fixed a small bug where the cutoff distances were not being correctly recorded \nin CLJCutoffFunction\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T16:53:34.244390Z","commit":"2281","message":"Fixed a python wrapper compile bug\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T16:43:20.908972Z","commit":"2280","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T16:39:37.402618Z","commit":"2279","message":"I've refactored the CLJ energy functions so that I can add a CLJIntraShiftFunction\nto calculate intramolecular energies\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T14:15:16.949170Z","commit":"2278","message":"Python wrappers for the last commit\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-04T14:10:45.319077Z","commit":"2277","message":"Added code to set IDs in CLJAtoms from AtomIdx. This will allow calculation\nof the intramolecular non-bonded terms\n\n"},{"author":"chryswoods@gmail.com","date":"2014-02-03T17:31:18.546564Z","commit":"2276","message":"Added the code to parallelise energies where the function doesn't have a cutoff.\n\nAlso played around with the grain size and saw that it didn't make much difference.\n\n"}]}