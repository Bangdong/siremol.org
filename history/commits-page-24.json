{"Page":24,"TotalPages":28,"commits":[{"author":"chryswoods","date":"2008-02-22T23:20:10.644916Z","commit":"475","message":"I've added a 2D array class that will be useful for the pair-pair potentials (e.g. to store\nLJ parameter pairs). I've also written the CLJPotential function that calculates the \nintermolecular CLJ energy between pairs of molecules.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-22T09:46:56.515626Z","commit":"474","message":"I've finished the moving functions of CoordGroupArrayArray. Now everything up to SireMol compiles\nand links.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-22T09:07:58.701412Z","commit":"473","message":"I've fixed my openmp problem - I forgot to use the private version of the DistMatrix. Using\nthat, it now takes 2.5s to do 144M distance calculations over two cores, which is \nabout 70% faster than on one core.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-22T00:07:56.329962Z","commit":"472","message":"I've compared the speed of my distance routines to a basic calculation. This shows that\nmy code is really quick - 144M sqrts take 3.6s, while doing the 144M distance calculations\nusing my data structures takes 4.2s. Even better, 144M distance calculations using\na pair of simple arrays takes 8.4s, so my implementation is twice as quick :-)\n\nI've also fully integrated SireMol with the new CoordGroup and have added in extra\nfunctions to allow moving of parts of the CoordGroupArray and CoordGroupArrayArray\n(this is also more efficient than my old design). However I've not quite finished\nthe code in CoordGroupArrayArray.\n\nI've also upgrade my gcc to version 4.2.3, which meant I had to fix a few compile\nproblems in the rest of the code. gcc 4.2.3 with -march=prescott is about 0.2 to 0.3s\nfaster than gcc 4.0.1 (I think with -march=i686). I tried adding openmp code but\nthis really slowed everything down. I think I need to learn more about how\nopenmp works...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-21T00:55:09.794453Z","commit":"471","message":"I've merged the minor changes in CoordGroup/CoordGroupArray API into SireMol, which now all compiles\n(though doesn't link as I am missing the coordinate manipulation functions of AtomCoords...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T21:52:47.271719Z","commit":"470","message":"I've sped up the distance calculation by pairing up the sqrts (so two are done at once)\nand also adding in an SSE instruction so that both square roots are done in parallel.\n\nThis brings down the time required for the 144M distances to 4.5s.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T20:16:27.151221Z","commit":"469","message":"It was a bug in Vector (the shame - not calculating the correct distance or distance^2!!! ;-)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T16:48:34.123148Z","commit":"468","message":"I've finished moving CoordGroup2 to CoordGroup, but it doesn't work (the distances are wrong...)\n\nI'll need to debug it...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T16:29:13.959722Z","commit":"467","message":"Continuing to move CoordGroup2 to CoordGroup...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T16:27:15.152697Z","commit":"466","message":"Beginning to move CoordGroup2 to CoordGroup...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T15:34:00.322747Z","commit":"465","message":"I've played around with trying to explicitly add SSE support to my Vector class, but\nwithout much success (I always end up with something that is slower than the compiler...).\n\nI've also made the vector into a 32bit class, so it aligns better in arrays, and have\nadded some padding to the CoordGroup CGMemory which seems to have sped it up a little.\n\nThe fastest now is about 1.8s for distance^2, and 4.7s for distance().\n\n(so nearly 3s is just sqrt!)\n\nI was wrong in the last post, there are 12000 points in each group (1000 blocks\nof 3 groups or 4 points). This means that it is 144M pair calculations, therefore\nit is at least 8*144M operations. For dist2 this is about 0.65 GFLOPS, which is slightly\nmore respectable, while for distance it is 0.25 GFLOPS (although I don't know how many\noperations are in a sqrt).\n\nThis is still a way from the theoretical value of 15-20 GFLOPS for my laptop...\n\n"},{"author":"chryswoods","date":"2008-02-20T08:39:21.950399Z","commit":"464","message":"I've further tested the new CoordGroup classes and they seem to work well. For two groups of\n1000 molecules, where each molecule contains 3 groups of 4 atom (with random coords), the\ncalculation of all interatomic distance pairs between groups takes 4.8s. It takes 2.0s to\ncalculate distance^2 between all pairs. (thats 7000^2 pairs)\n\nThis compares to 5.9s and 2.9s for QVector\u003c QVector\u003cCoordGroup\u003e \u003e (which is not too bad).\nThis is a 20-30% speedup.\n\nHowever, each Vector::distance2(Vector,Vector) calculation uses about 8 double operations.\nThis means that (ignoring loop counters and double comparisons) there are just 8*(7000^2)\noperations in 2s, so just 4*(7000^2) double operations per second. This is only\n100 MFLOPS (double), which is far from the 2-4 GFLOPS that my laptop should be capable of...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-20T00:26:40.667529Z","commit":"463","message":"I've added CoordGroupArrayArray, and it seems to work. Using CoordGroupArrayArray as opposed to\nQVector\u003c QVector\u003cCoordGroup\u003e \u003e increases efficiency by about 20% (which is less than I'd thought...)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-19T22:57:44.479190Z","commit":"462","message":"I've written the CoordGroupArray class now and it seems to be working...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-19T21:03:26.454062Z","commit":"461","message":"I've sorted out placing CoordGroup and CoordGroupArray objects into the memory allocated\nby CGMemory (so that the CoordGroupArray and CoordGroupArrayArray containers can properly\niterate over these objects).\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-19T16:59:34.579012Z","commit":"460","message":"I'm moving the CoordGroup/CoordGroupArray pointers into their own arrays in CGMemory...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-19T09:35:32.527028Z","commit":"459","message":"I've realised that I've got to store the CoordGroup and CoordGroupArray objects in the CGArrayArrayData,\nso am modifying the code to achieve this...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-18T23:00:10.303900Z","commit":"458","message":"I've fixed the bug - the CoordGroup classes now use a proper shared pointer. The test shows\nthat it is working, and that it is a little faster than the original CoordGroup implementation\n(before I've even sorted out the packed array...)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-18T08:53:31.247700Z","commit":"457","message":"I made a silly error in forgetting which part of the CG object should be detached! Hence the bugs!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-17T20:40:45.505086Z","commit":"456","message":"I've written CoordGroup2 and CoordGroupEditor2 and am in the process of debugging them\n(as the memory work for these is quite complex, and *must* be right, or Sire will have\nthe stability of an inexperienced tightrope walker)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-17T17:01:47.255100Z","commit":"455","message":"I've worked out how to pack all of the coordinate data together so that it will hopefully\nstay in cache more. I'm implementing the structure in CoordGroup2 and have written some\nspeed tests. It is based on the fact that memcpy is *really* quick (~1s for 500MB of data!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-15T08:54:33.736931Z","commit":"454","message":"I'm still working on the skeleton of the new layout...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-14T08:51:45.554760Z","commit":"453","message":"I am continuing to fill in the skeleton of the revised SireFF design...\n\n"},{"author":"chryswoods","date":"2008-02-14T08:12:42.675019Z","commit":"452","message":"I'm laying out the files for the updated version of SireFF.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-13T21:12:42.759055Z","commit":"451","message":"I'm sketching out the plan for the updated design of the forcefields. This merges together\nthe use of MolGroup/MolGroups and also the TwoBodyFF template idea from last summer.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-13T15:46:52.445925Z","commit":"450","message":"I've filled in all of the functions now (except for a few marked stubs), and now SireMol\ncompiles *AND* links on OS X. It has been several months, but *at last*!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-13T11:47:41.003307Z","commit":"449","message":"I'm still filling in missing SireMol functions. There are only a few to go now :-)\n\nSireMol compiles buts doesn't link\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-12T08:50:20.027334Z","commit":"448","message":"I'm continuing to fill in the missing SireMol functions...\n\nSireMol compiles but doesn't link\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-11T08:54:15.331122Z","commit":"447","message":"I'm filling in all of the missing SireMol functions...\n\nSireMol compiles but doesn't link...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-09T22:41:55.647581Z","commit":"446","message":"I've written the code that allows the setting and retrieval of properties for the \nStructureEditor derived classes\n\nSireMol compiles but doesn't link\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-09T16:13:04.098881Z","commit":"445","message":"I've finished updating AtomSelection to remove the confusing const-class behaviour, and have\nalso updated the other SireMol classes so that they are compatible with this modified API.\n\nSireMol all compiles, but fails to link\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-08T08:51:09.312577Z","commit":"444","message":"I'm updating the API for AtomSelection a little to remove its confusing const behaviour!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-06T08:48:28.397230Z","commit":"443","message":"I've written the code that converts the editable properties back to a Properties object. I need\nto update the conversion code though to cache the MoleculeInfoData used as otherwise any\nproperties that need a MoleculeInfoData will create their own. This is inefficient, and also\neach one would have a different UID, so the properties would be incompatible!\n\nSireMol compiles, but doesn't link\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-05T21:57:22.298956Z","commit":"442","message":"I've written about a third of the code now that converts the editable properties\nback into a Properties() object\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-05T21:03:49.555454Z","commit":"441","message":"I've written the code that converts the properties into the editable format used \nby StructureEditor. It is quite cool (even doing the metadata and property metadata).\n\nNow I've just got to write the code that converts it back again...\n\nSireMol compiles but doesn't link.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-05T17:39:55.146495Z","commit":"440","message":"I've added the ability for the property classes (AtomProperty, ResProperty, CGProperty, \nChainProperty and SegProperty) to be converted to and from QVariants. This will ease\nthe getting and setting of properties in the StructureEditor classes (as now each\natom/CutGroup/residue/chain/segment can hold the property as a single QVariant)\n\nSireMol compiles, but doesn't link\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-05T12:59:00.933508Z","commit":"439","message":"I've finished writing the functions of EditMolInfo.\n\nSireMol all compiles, but doesn't link.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-04T08:49:47.680149Z","commit":"438","message":"I am now filling in the functions of EditMolInfo...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-03T19:45:14.328907Z","commit":"437","message":"I've created a standard query interface (MolInfo) that is used by all of the ID classes\n(it provides the interface for all of the .map(....) functions).\n\nI've updated MoleculeInfoData to use this interface, and am writing an EditMolInfo \nclass that will provide that interface for the StructureEditor derived classes.\n\nSireMol all compiles, but there are still missing functions.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-02T20:08:17.020894Z","commit":"436","message":"Ok, now I've got StructureEditor compiling, but still the properties are not being converted...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-02T12:45:00.609189Z","commit":"435","message":"I've written the code to convert a StructureEditor into a MoleculeData (well, not including the \nproperties), and have nearly finished the code to convert a MoleculeData into a StructureEditor\n(again, excluding the properties...)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-02-01T08:50:43.417204Z","commit":"434","message":"I'm continuing to fill in the functionality of StructureEditor...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-31T22:02:48.595049Z","commit":"433","message":"I am continuing to fill in the missing functions of StructureEditor\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-31T18:04:19.325988Z","commit":"432","message":"I'm working now on filling in StructureEditor functions...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-31T17:13:15.787316Z","commit":"431","message":"I've made quite a few big changes as I've filled in the missing functions. I've changed the \nversion system so that now MoleculeInfoData has a UID() function that uniquely identifies\na particular molecule layout. This means that the molecule number (moleculedata.number()) does\nnot have to tie a molecule to a particular layout, thereby allowing the user to use the molecule\nnumber to identify a molecule, and allowing the code to detect when the layout has changed.\n\nI've filled in quite a few functions and have propogated all of these changes within SireMol,\nand have also added the code that allows renaming of molecule views using the Editor\u003cT\u003e,\nrather than having to jump all of the way to a StructureEditor.\n\nSireMol all compiles, but there are still missing functions\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-30T22:55:41.080780Z","commit":"430","message":"I've got all of the editor classes implemented and compiling now. I've still got to implement\nthe StructureEditor base class, but now that the others are written, its API is now in place.\n\nAll of SireMol compiles, but there are missing functions.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-30T11:38:22.556456Z","commit":"429","message":"I am continuing to fill in the missing editor functionality - it takes a while...\n\nAlso, the code has now moved over 100k lines... That's a lot of typing!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-29T22:50:05.403934Z","commit":"428","message":"I'm continuing to fill in the functions of the *Editor and *StructureEditor functions.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-29T16:45:35.618837Z","commit":"427","message":"I'm fleshing out the molecule editing classes. I've broken it down now into TEditor classes,\ne.g. AtomEditor, that derive from Editor\u003cT\u003e, and only edit data about the actual object,\nand TStructureEditor classes, which can make changes that change the structure/arrangment of\nthe molecule, e.g. AtomStructureEditor. These classes derive from StructureEditor, which \nat the moment is just a placeholder for the editor API that I will need to implement...\n\nSireMol all compiles, but lots of functions are undefined\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-29T08:52:41.447419Z","commit":"426","message":"I've worked out how the molecule editing API will work - it all goes through\n??Editor classes, which can change the local data for ???, and ???StructureEditor\nclasses, which can actually edit the molecular structure (i.e. add, move and remove\natoms, cutgroups, residues, chains and segments).\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-28T13:53:54.370382Z","commit":"425","message":"Working my way filling in the missing functions...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-28T08:47:01.665333Z","commit":"424","message":"SireMol now all compiles - I now have to fill in all of the missing functions so that\nit will successfully link!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-24T16:49:55.625683Z","commit":"423","message":"I've nearly got all of mover.cpp to compile, though at the cost of making AtomSelection into a \nMoleculeProperty, which causes a clash with the \"mask\" function (different return types!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-24T09:54:56.279321Z","commit":"422","message":"I've fixed the improper to use the right convention for atom labels!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-24T09:33:40.331338Z","commit":"421","message":"I've finished the code that calculates improper angles (it calculates the *right* improper angle!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-23T08:39:20.522557Z","commit":"420","message":"I've written AngleID and DihedralID (both of which compile without error)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-22T22:39:59.818167Z","commit":"419","message":"I've added the BondID class (which compiles) to identify the atoms in a bond\n(whether in the same molecule or between molecules)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-22T16:51:11.142493Z","commit":"418","message":"There's a lot more to do to mover.cpp than I originally thought - I'd forgotten that I\nhad not finished off the Connectivity class and the BondID, AngleID, DihedralID and \nImproperID functions....\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-22T10:36:58.503677Z","commit":"417","message":"I'm moving through SireMol to get it all to compile. I've just updated WeightFunction\nto the new Property model, and it weightfunction.cpp now compiles without error.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-20T21:23:07.589949Z","commit":"416","message":"I've got most of SireMol compiling now. There's a few problems with Mover.hpp that still need sorting.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-17T16:38:51.833577Z","commit":"415","message":"I'm having to make some fixes to the code as MolGroups etc. are not compiling on my linux\ndesktop. I've now got MolGroups compiling, so am now working through the rest of the code\n(the problem now is updating SireVol so that Space is just a pointer wrapper, rather\nthan a full function)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-16T22:11:37.103619Z","commit":"414","message":"MolGroups, MolGroupsBase and MolGroup all now compile :-). Things are now slowly getting there...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-16T12:26:38.750050Z","commit":"413","message":"I'm finishing up MolGroups and MolGroupsBase by getting them to compile. This is necessitating me \nadding more selection code to the ID classes and to PartialMolecule. It is getting there though\n(MolGroup has all of the code and now compiles, and all of the ID classes compile)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-15T22:41:51.090601Z","commit":"412","message":"I've nearly finished MolGroups and MolGroupsBase - this has made me extend the API of MolGroup\na little so that it can fully resolve MolID objects.\n\nCode is broken.\n\n"},{"author":"chryswoods","date":"2008-01-14T12:07:05.218036Z","commit":"411","message":"I've filled in all of the MolGroupsBase and MolGroups code, and have also added MGNumList, which\nis an MGID that is just a list of MGNum numbers. \n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-13T18:02:09.324182Z","commit":"410","message":"I've filled in the query API functions for MolGroupsBase. These are quite powerful. They will\nallow the user to write python code like;\n\nfor atom in system.selectAll( AtomName(\"CA\") ):\n    atom = atom.move().translate( (1*angstrom,0,0) )\n    system.update(atom)\n\nThis code (obviously!) translates all of the atoms called \"CA\" in the system by 1 angstrom\nto the right along the x axis. How cool is that! The user can also be more selective, e.g.\n\nfor atom in system.selectAll( MGName(\"protein\") + AtomName(\"CA\") ):\n\n...or...\n\nfor atom in system.atoms( MGName(\"protein\") + MolIdx(0) + AtomName(\"CA\") ):\n\nThis last one moves all of the atoms called CA in the first protein in the \"protein\" group.\n\nWhat is even more cool is that this API is the same for *all* MolGroupsBase derived objects,\ni.e. System, ForceField and MoleculeGroups!!!\n\nCode is broken. \n\n"},{"author":"chryswoods","date":"2008-01-12T15:25:25.557816Z","commit":"409","message":"I've filled in all of the code for MolGroups, and am now sorting out the query interface\nthat is part of MolGroupsBase. This allows for the selection of individual atoms\n(or any other MoleculeView) from complex search terms within the whole set of \nMoleculeGroups. This interface is then the same (using the same code) for the \nSystem and ForceField classes as well!\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-03T18:14:20.137066Z","commit":"408","message":"Making progress on the MolGroupsBase and MolGroups classes. The API is set, and the search\nAPI is now very similar to that of Molecule (e.g. select() and selectAll() functions)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-01T18:01:41.756577Z","commit":"407","message":"I've added the streaming operators for MolGroup and have made a start on MolGroups (and\nMolGroupsBase).\n\nDinner interupts :-)\n\nCode is broken.\n\n"},{"author":"chryswoods","date":"2008-01-01T17:04:12.518691Z","commit":"406","message":"I've written all of ViewsOfMol, Molecules and MolGroup, and they all compile without error.\n\nI'm now going to move on to MolGroups, so that I can then finish up the whole molecule container\nhierarchy.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2008-01-01T10:20:26.646601Z","commit":"405","message":"I'm making good progress sorting out the api and implementation of the molecule container\nclasses. I've decided that containers will not be const classes (unlike Molecule). The\nreason is that I don't want to have to copy the container (of potentially thousands of \nmolecules) every time it is updated. The API as a const class was a bit messy.\n\nNow I have made Molecules a non-const class, and have created the code that means that\nit returns what has changed when it is modified. This will help the forcefield classes,\nwhich will use the MolGroup class (that uses Molecule) to keep track of how things\nchange. This abstracts all molecule bookkeeping code into a single place (Molecules),\nrather than as before, having it scattered across the forcefield classes.\n\nCode is still broken (yes, it has been broken for most of 2007, and is still broken\nnow that we have moved into 2008 - it will however be fixed soon, as I have a lot\nof production simulations planned that will use Sire this year!)\n\n"},{"author":"chryswoods","date":"2007-11-14T21:50:35.253143Z","commit":"404","message":"I've created the MolGroup class as the base of all MoleculeGroup type classes.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-11-13T10:00:39.926471Z","commit":"403","message":"I've worked out now how to relate the different Molecule group classes (MolGroup, MolGroups, MoleculeGroup, \nMoleculeGroups and ForceField/FFBase).\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-11-06T14:46:50.351197Z","commit":"402","message":"I've worked out nearly all of MoleculeGroups' API, and have planned how this will integrate with System\n(System will inherit from MoleculeGroups, but will reimplement the _pvt_???() functions, thereby\nallowing it to update the MoleculeGroups in the forcefields, and then copy these back to the \nMoleculeGroups object). I've also now worked out how the search API for MolID and MGID will work and\nhave now got to implement that so that MoleculeGroups will compile.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-11-05T22:51:41.481653Z","commit":"401","message":"I've written more of MoleculeGroups...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-11-05T12:11:04.288524Z","commit":"400","message":"I'm now working on MoleculeGroups - I think I've got the basics of the API for this class, and I am\nnow in the process of filling it in.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-11-04T09:42:27.786656Z","commit":"399","message":"I've fixed the problem in MolproFF where I'd made a mistake in the labelling of the command input.\n"},{"author":"chryswoods","date":"2007-11-04T09:29:40.723385Z","commit":"398","message":"I've manually added the wrapping for MolproFF::header and MolproFF::setHeader (as Py++ crashes out...)\n\n"},{"author":"chryswoods","date":"2007-11-04T09:26:15.520784Z","commit":"397","message":"Changing molproff so that the user can change the header.\n\n"},{"author":"chryswoods","date":"2007-11-03T15:15:15.735701Z","commit":"396","message":"MoleculeGroup is now written and it compiles without error. I think that I just have MoleculeGroups\nnow to finish and then the new SireMol will be nearly ready (and so I can get down to the hard\njob of sorting out the python wrapping and integrating it all with SireIO so that I can\nload some molecules into the new data structures)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-11-02T08:36:08.447907Z","commit":"395","message":"I've added a csreset before each molpro calculation in an attempt to fix a random molpro crash.\n\n"},{"author":"chryswoods","date":"2007-11-01T10:38:08.959922Z","commit":"394","message":"I've added in the changes necessary to make it work with the clearspeed accelerated version of molpro.\n\n"},{"author":"chryswoods","date":"2007-10-31T19:42:06.879483Z","commit":"393","message":"I've got the threading code working, but it still occasionally crashes...\n\n"},{"author":"chryswoods","date":"2007-10-31T11:06:28.910093Z","commit":"392","message":"I've changed the MolproSession so that it writes the output to a file, so that there is a chance of debugging molpro crashes (well a little chance - it depends on whether the output has been flushed to disk...)\n\n"},{"author":"chryswoods","date":"2007-10-30T14:44:24.180094Z","commit":"391","message":"I am debugging the segfault caused by running the MTSMC move in parallel...\n\n"},{"author":"chryswoods","date":"2007-10-29T22:22:56.149810Z","commit":"390","message":"I've filled in some of the functionality of the MoleculeGroup class.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-25T15:32:36.447379Z","commit":"389","message":"I've added code to allow parallel running of fast moves while evaluating the energy of the slow moves during an MTSMC move. It currently crashes when used on water - I wonder why?\n\n"},{"author":"chryswoods","date":"2007-10-24T20:00:18.749858Z","commit":"388","message":"I've written the Molecules class now, and have worked out how Molecules and MoleculeGroup are different\n(Molecules is the work-a-day class that is passed around and modified a lot, while MoleculeGroup\ncan assume that its contents are not as much in flux, so has more indexing, identification,\nversioning and searching functions).  Oh yes, and ViewsOfMol is a really nice little class :-)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-20T14:23:11.603587Z","commit":"387","message":"I've finished writing PartialMolecule now (and it compiles :-)\n\nI've also changed the API slightly - I've renamed mol.selectedAtoms() to mol.selection(), and have\nadded a mol.selector() function, which returns a Selector\u003cT\u003e that allows you to change the \nselection.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-20T11:40:48.233701Z","commit":"386","message":"I've added a ViewsOfMol class (which is now complete and compiles). This class can hold multiple arbitrary views\nof a single molecule (so is like a Selector\u003cPartialMolecule\u003e). This will form the basis of the Molecules\ncontainer class, thereby allowing multiple views of multiple molecules to be easily stored and passed\naround within the code. This solves the problem I had in the old design where multiple views of \na molecule couldn't be added to the same group (e.g. a user wanting to move lots of residues\nindividually from a molecule couldn't achieve it with a single MoleculeGroup, as each residue\njust got added to the single complete view of the molecule!).\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-18T15:26:00.811031Z","commit":"385","message":"Made changes to allow molpro to use clearspeed boards\n\n"},{"author":"chryswoods","date":"2007-10-18T09:44:58.778114Z","commit":"384","message":"I've created tags for the version of Sire used in the upcoming J Chem Phys 2007 paper, and\nfor the version that will be used at the Supercomputing 2007 conference in Reno.\n\n"},{"author":"chryswoods","date":"2007-10-17T09:31:55.322137Z","commit":"383","message":"I'm now up to getting MoleculeGroup to compile. Things are going well, it is just such a *slow* process\ngetting this all down in text...\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-16T20:23:16.941000Z","commit":"382","message":"I've made lots of progress - AtomSelection is now complete, and I'm working through getting the rest of \nSireMol to compile (I'm up to evaluator.cpp)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-16T15:03:45.195670Z","commit":"381","message":"I've filled in a lot more of AtomSelection - this is definitely one of the largest single\nsource files in the whole of SireMol - it will probably top 2500 lines once it's done...\n\n(admittedly lots of comments!)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-16T12:01:29.317359Z","commit":"380","message":"I've made a lot of progress getting the rest of SireMol to compile - AtomSelection is now being rewritten,\nI'm happy with the comparison operators (MoleculeInfoData uses a fingerprint now for most things), and\nI've defined 'contains()' to means completely contains (containsAll()) and 'intersects()' to mean\ncontains some.\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-13T22:09:46.204260Z","commit":"379","message":"All of the MoleculeView classes now compile, as do MoleculeData and MoleculeInfoData... \n\nI am getting close :-)\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-13T15:37:14.380987Z","commit":"378","message":"I've take a big step towards finishing SireMol now - all of the view classes, Atom, CutGroup, Residue, \nChain and Segment all compile, as do explicitly instantiated template manipulator classes of these view :-)\n\nCode is still broken\n\n"},{"author":"chryswoods","date":"2007-10-12T21:03:33.393126Z","commit":"377","message":"I've now got atom.cpp to compile when I explicitly instantiate the atom manipulator classes\n(Mover\u003cAtom\u003e, Editor\u003cAtom\u003e and Selector\u003cAtom\u003e) in atom.cpp\n\nCode is broken\n\n"},{"author":"chryswoods","date":"2007-10-12T20:28:01.740837Z","commit":"376","message":"I've finally got atom.cpp to compile without warnings or errors...!\n\nCode is broken.\n\n"}]}